# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Scaffold SAAS Auth API
    description: 后台管理脚手架系统-认证服务
    contact:
        name: SAAS架构
        url: https://github.com/grpc-ecosystem/grpc-gateway
        email: none@example.com
    license:
        name: BSD 3-Clause License
        url: https://github.com/grpc-ecosystem/grpc-gateway/blob/master/LICENSE.txt
    version: "1.0"
paths:
    /admin/v1/login:
        post:
            tags:
                - AuthService
            description: 后台登陆
            operationId: AuthService_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /admin/v1/logout:
        post:
            tags:
                - AuthService
            description: 后台登出
            operationId: AuthService_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LogoutRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LogoutResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
            security:
                - OAuth2PasswordBearer: []
    /admin/v1/register:
        post:
            tags:
                - AuthService
            description: 注册
            operationId: AuthService_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /admin/v1/users:
        get:
            tags:
                - UserService
            description: 获取用户列表
            operationId: UserService_ListUser
            parameters:
                - name: page
                  in: query
                  description: 当前页码
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每页的行数
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  description: 与过滤参数
                  schema:
                    type: string
                - name: or
                  in: query
                  description: 或过滤参数
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: 排序条件
                  schema:
                    type: array
                    items:
                        type: string
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
                - name: fieldMask
                  in: query
                  description: 字段掩码
                  schema:
                    type: string
                    format: field-mask
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
            security:
                - OAuth2PasswordBearer: []
        post:
            tags:
                - UserService
            description: 创建用户
            operationId: UserService_CreateUser
            parameters:
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
            security:
                - OAuth2PasswordBearer: []
    /admin/v1/users/{id}:
        get:
            tags:
                - UserService
            description: 获取用户数据
            operationId: UserService_GetUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
            security:
                - OAuth2PasswordBearer: []
        put:
            tags:
                - UserService
            description: 更新用户
            operationId: UserService_UpdateUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
            security:
                - OAuth2PasswordBearer: []
        delete:
            tags:
                - UserService
            description: 删除用户
            operationId: UserService_DeleteUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
            security:
                - OAuth2PasswordBearer: []
components:
    schemas:
        CreateUserResponse:
            type: object
            properties: {}
        DeleteUserResponse:
            type: object
            properties: {}
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListUserResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
                total:
                    type: integer
                    format: int32
        LoginRequest:
            type: object
            properties:
                name:
                    type: string
                password:
                    type: string
                grandType:
                    type: integer
                    format: int32
            description: 用户后台登陆 - 请求
        LoginResponse:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                name:
                    type: string
                tokenType:
                    type: string
                accessToken:
                    type: string
                refreshToken:
                    type: string
            description: 用户后台登陆 - 回应
        LogoutRequest:
            type: object
            properties: {}
            description: 用户后台登出 - 请求
        LogoutResponse:
            type: object
            properties: {}
            description: 用户后台登出 - 回应
        RegisterRequest:
            type: object
            properties:
                auth:
                    $ref: '#/components/schemas/RegisterRequest_Auth'
                domain:
                    type: string
            description: 注册 - 请求
        RegisterRequest_Auth:
            type: object
            properties:
                name:
                    type: string
                    description: 用户名
                password:
                    type: string
                    description: 密码
                phone:
                    type: string
                    description: 电话
                grandType:
                    type: integer
                    description: 授权类型，一直为：password
                    format: int32
        RegisterResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                result:
                    $ref: '#/components/schemas/GoogleProtobufAny'
                type:
                    type: string
            description: 注册 - 回应
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateUserResponse:
            type: object
            properties: {}
        User:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                name:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                birthday:
                    type: string
                gender:
                    type: integer
                    format: int32
                phone:
                    type: string
                email:
                    type: string
                avatar:
                    type: string
                state:
                    type: integer
                    description: 状态 1 激活 2 未激活 3 禁用
                    format: int32
                createdAt:
                    type: string
                updatedAt:
                    type: string
                creatorId:
                    type: integer
                    description: 创建者ID
                    format: uint32
                authority:
                    type: integer
                    description: 权限
                    format: int32
                password:
                    type: string
                description:
                    type: string
tags:
    - name: AuthService
      description: The greeting service definition.
    - name: UserService
      description: 用户管理服务
