syntax = "proto3";

package api.admin.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

option go_package = "github.com/beiduoke/go-scaffold/api/admin/v1;v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.admin.v1";
option java_outer_classname = "adminProtoV1";

// The greeting service definition.
service Admin {
  // 登出
  rpc Logout (google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/admin/v1/auth/logout"
      body: "*"
    };
  }
  // 用户名密码登陆
  rpc NamePasswordLogin (NamePasswordLoginReq) returns (LoginReply) {
    option (google.api.http) = {
      post: "/admin/v1/auth/passwordLogin"
      body: "*"
    };
  }
  // 注册
  rpc Register (RegisterReq) returns (RegisterReply) {
    option (google.api.http) = {
      post: "/admin/v1/auth/register"
      body: "*"
    };
  }
  // 用户列表
  rpc ListUser (google.protobuf.Empty) returns (ListUserReply) {
    option (google.api.http) = {
      get: "/admin/v1/users"
    };
  }
}

message Content {
  string content = 1;
}

message User {
  optional uint64 id = 1;
  optional string user_name = 2 [json_name = "userName"];
  optional string password = 3;
  optional string nick_name = 4;
  optional string email = 5;
  repeated string authoritys = 6;
  optional string token = 7 [deprecated = true];
}

message ListUserReply {
  repeated User items = 1;
  int32 total = 2;
}

// 请求 - 登录
message NamePasswordLoginReq {
  // 用户名
  string name = 1 [(validate.rules).string = {min_len: 1, max_len: 10}];
  // 密码
  string password = 2 [(validate.rules).string = {min_len: 6, max_len: 25}];
}

// 回应 - 登录
message LoginReply {
  string token = 1;
  google.protobuf.Timestamp expire_time = 2;
}

// 请求 - 登出
message LogoutReq {
  uint64 id = 1;
}

// 回应 - 登出
message LogoutReply {
  uint64 id = 1;
}

message RegisterReq {
  string username = 1;
  string password = 2;
  string email = 3;
}
message RegisterReply {
  string message = 1;
  bool success = 2;
}

message WebsocketProto  {
  string event_id = 1;
  string payload = 2;
}

message WebsocketMessage {
  string message = 1;
  string sender = 2;
  string timestamp = 3;
}