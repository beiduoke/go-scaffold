syntax = "proto3";

package api.admin.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
import "protobuf/enum.proto";
import "protobuf/struct.proto";

option go_package = "github.com/beiduoke/go-scaffold/api/admin/v1;v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.admin.v1";
option java_outer_classname = "adminProtoV1";

// The domain service definition.
service DomainService {
  // 列表领域
  rpc ListDomain (api.protobuf.PagingReq) returns (api.protobuf.PagingReply) {
    option (google.api.http) = {
      get: "/admin/v1/domains"
    };
  }
  
  // 创建领域
  rpc CreateDomain (CreateDomainReq) returns (CreateDomainReply) {
    option (google.api.http) = {
      post: "/admin/v1/domains"
      body: "data"
    };
  }
  
  // 获取领域
  rpc GetDomain (GetDomainReq) returns (Domain) {
    option (google.api.http) = {
      get: "/admin/v1/domains/{id}"
    };
  }
  
  // 修改领域
  rpc UpdateDomain (UpdateDomainReq) returns (UpdateDomainReply) {
    option (google.api.http) = {
      put: "/admin/v1/domains/{id}"
      body: "data"
    };
  }
  
  // 删除领域
  rpc DeleteDomain (DeleteDomainReq) returns (DeleteDomainReply) {
    option (google.api.http) = {
      delete: "/admin/v1/domains/{id}"
    };
  }
}

// 领域模块
message Domain {
  optional google.protobuf.Timestamp created_at = 1;
  optional google.protobuf.Timestamp updated_at = 2;
  optional uint64 id = 3;
  optional string name = 4;
  optional api.protobuf.DomainState state = 5;
}

// 请求 - 创建领域
message CreateDomainReq {
  Domain data = 1;
}

// 回应 - 创建领域
message CreateDomainReply {
  bool success = 1;
  string message = 2;
}

// 请求 - 修改领域
message UpdateDomainReq {
  uint64 id = 1;
  message Data {
    string name = 1 [(validate.rules).string = {min_len: 1, max_len: 10}];
  }
  Data data = 2;
}

// 回应 - 创建领域
message UpdateDomainReply {
  bool success = 1;
  string message = 2;
}

// 请求 - 获取领域
message GetDomainReq {
  uint64 id = 1;
}

// 请求 - 删除领域
message DeleteDomainReq {
  uint64 id = 1;
}

// 回应 - 删除领域
message DeleteDomainReply {
  bool success = 1;
  string message = 2;
}