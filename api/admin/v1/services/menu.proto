syntax = "proto3";

package api.admin.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
import "protobuf/enum.proto";
import "protobuf/struct.proto";

option go_package = "github.com/beiduoke/go-scaffold/api/admin/v1;v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.admin.v1";
option java_outer_classname = "adminProtoV1";

// The menu service definition.
service MenuService {
  // 列表菜单
  rpc ListMenu (api.protobuf.PagingReq) returns (api.protobuf.PagingReply) {
    option (google.api.http) = {
      get: "/admin/v1/menus"
    };
  }

  // 获取树形菜单
  rpc GetMenuTree (GetMenuTreeReq) returns (Menu) {
    option (google.api.http) = {
      get: "/admin/v1/menus/tree/{id}"
    };
  }
  
  // 创建菜单
  rpc CreateMenu (CreateMenuReq) returns (CreateMenuReply) {
    option (google.api.http) = {
      post: "/admin/v1/menus"
      body: "data"
    };
  }
  
  // 获取菜单
  rpc GetMenu (GetMenuReq) returns (Menu) {
    option (google.api.http) = {
      get: "/admin/v1/menus/{id}"
    };
  }
  
  // 修改菜单
  rpc UpdateMenu (UpdateMenuReq) returns (UpdateMenuReply) {
    option (google.api.http) = {
      put: "/admin/v1/menus/{id}"
      body: "data"
    };
  }
  
  // 删除菜单
  rpc DeleteMenu (DeleteMenuReq) returns (DeleteMenuReply) {
    option (google.api.http) = {
      delete: "/admin/v1/menus/{id}"
    };
  }
}

// 菜单模块
message Menu {
  optional google.protobuf.Timestamp created_at = 1;
  optional google.protobuf.Timestamp updated_at = 2;
  optional uint64 id = 3;
  optional string name = 4;
  optional uint64 parent_id = 5;
  optional string path = 6;
  optional api.protobuf.MenuHidden hidden = 7;
  optional string component = 8;
  optional int64 sort = 9;
  optional string icon = 10;
  optional string title = 11;
  optional api.protobuf.MenuKeepAlive keep_alive = 12;
  optional api.protobuf.MenuBaseMenu base_menu = 13;
  optional api.protobuf.MenuCloseTab close_tab = 14;
  repeated Menu childrens = 15;
}

// 请求 - 创建菜单
message CreateMenuReq {
  message Data {
    string name = 1 [(validate.rules).string = {min_len: 1, max_len: 10}];
  }
  Data data = 1;
}

// 回应 - 创建菜单
message CreateMenuReply {
  bool success = 1;
  string message = 2;
}

// 请求 - 修改菜单
message UpdateMenuReq {
  uint64 id = 1;
  message Data {
  }
  Data data = 2;
}

// 回应 - 创建菜单
message UpdateMenuReply {
  bool success = 1;
  string message = 2;
}

// 请求 - 获取菜单
message GetMenuReq {
  uint64 id = 1;
}

// 请求 - 删除菜单
message DeleteMenuReq {
  uint64 id = 1;
}

// 回应 - 删除菜单
message DeleteMenuReply {
  bool success = 1;
  string message = 2;
}

message GetMenuTreeReq {
  uint64 id = 1;
}

message GetMenuTreeReply {
  uint64 id = 1;
}