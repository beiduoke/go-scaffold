# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Admin API
    description: The greeting service definition.
    version: 0.0.1
paths:
    /admin/v1/auth/emailLogin:
        post:
            tags:
                - Admin
            description: 邮件登陆
            operationId: Admin_EmailLogin
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.EmailLoginReq_EmailField'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.LoginReply'
    /admin/v1/auth/logout:
        post:
            tags:
                - Admin
            description: 登出
            operationId: Admin_Logout
            requestBody:
                content:
                    application/json: {}
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.LogoutReply'
    /admin/v1/auth/middlePassLogin:
        post:
            tags:
                - Admin
            description: 中台密码登陆
            operationId: Admin_MiddlePassLogin
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.PassLoginReq_PassField'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.LoginReply'
    /admin/v1/auth/passLogin:
        post:
            tags:
                - Admin
            description: 密码登陆
            operationId: Admin_PassLogin
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.PassLoginReq_PassField'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.LoginReply'
    /admin/v1/auth/register:
        post:
            tags:
                - Admin
            description: 注册
            operationId: Admin_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.Auth'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.RegisterReply'
    /admin/v1/auth/smsLogin:
        post:
            tags:
                - Admin
            description: 短信登陆
            operationId: Admin_SmsLogin
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.SmsLoginReq_SmsField'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.LoginReply'
    /admin/v1/depts:
        get:
            tags:
                - Admin
            description: 列表部门
            operationId: Admin_ListDept
            parameters:
                - name: page
                  in: query
                  description: 当前页
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每一页的行数
                  schema:
                    type: integer
                    format: int32
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.protobuf.PagingReply'
        post:
            tags:
                - Admin
            description: 创建部门
            operationId: Admin_CreateDept
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.CreateDeptReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.CreateDeptReply'
    /admin/v1/depts/{id}:
        get:
            tags:
                - Admin
            description: 获取部门
            operationId: Admin_GetDept
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.Dept'
        put:
            tags:
                - Admin
            description: 修改部门
            operationId: Admin_UpdateDept
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.UpdateDeptReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.UpdateDeptReply'
        delete:
            tags:
                - Admin
            description: 删除部门
            operationId: Admin_DeleteDept
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.DeleteDeptReply'
    /admin/v1/depts/{id}/trees:
        get:
            tags:
                - Admin
            description: 获取树形部门
            operationId: Admin_ListDeptTree
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.ListDeptTreeReply'
    /admin/v1/domains:
        get:
            tags:
                - Admin
            description: 列表领域
            operationId: Admin_ListDomain
            parameters:
                - name: page
                  in: query
                  description: 当前页
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每一页的行数
                  schema:
                    type: integer
                    format: int32
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.protobuf.PagingReply'
        post:
            tags:
                - Admin
            description: 创建领域
            operationId: Admin_CreateDomain
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.CreateDomainReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.CreateDomainReply'
    /admin/v1/domains/login:
        post:
            tags:
                - Admin
            description: |-
                领域模块
                 登陆领域/租户
            operationId: Admin_LoginDomain
            parameters:
                - name: domain
                  in: query
                  description: 领域
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.Auth'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.LoginReply'
    /admin/v1/domains/register:
        post:
            tags:
                - Admin
            description: 注册领域/租户
            operationId: Admin_RegisterDomain
            parameters:
                - name: domain
                  in: query
                  description: 领域
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.Auth'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.RegisterReply'
    /admin/v1/domains/{id}:
        get:
            tags:
                - Admin
            description: 获取领域
            operationId: Admin_GetDomain
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.Domain'
        put:
            tags:
                - Admin
            description: 修改领域
            operationId: Admin_UpdateDomain
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.UpdateDomainReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.UpdateDomainReply'
        delete:
            tags:
                - Admin
            description: 删除领域
            operationId: Admin_DeleteDomain
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.DeleteDomainReply'
    /admin/v1/domains/{id}/menus:
        get:
            tags:
                - Admin
            description: 获取角色菜单
            operationId: Admin_ListDomainMenu
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.ListDomainMenuReply'
        post:
            tags:
                - Admin
            description: 处理角色菜单
            operationId: Admin_HandleDomainMenu
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.HandleDomainMenuReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.HandleDomainMenuReply'
    /admin/v1/domains/{id}/state:
        put:
            tags:
                - Admin
            description: 设置领域状态
            operationId: Admin_UpdateDomainState
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.UpdateDomainStateReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.UpdateDomainStateReply'
    /admin/v1/domains/{id}/trees:
        get:
            tags:
                - Admin
            description: 获取领域树形列表
            operationId: Admin_ListDomainTree
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.ListDomainTreeReply'
    /admin/v1/menus:
        get:
            tags:
                - Admin
            description: |-
                菜单模块
                 列表菜单
            operationId: Admin_ListMenu
            parameters:
                - name: page
                  in: query
                  description: 当前页
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每一页的行数
                  schema:
                    type: integer
                    format: int32
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.protobuf.PagingReply'
        post:
            tags:
                - Admin
            description: 创建菜单
            operationId: Admin_CreateMenu
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.CreateMenuReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.CreateMenuReply'
    /admin/v1/menus/{id}:
        get:
            tags:
                - Admin
            description: 获取菜单
            operationId: Admin_GetMenu
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.Menu'
        put:
            tags:
                - Admin
            description: 修改菜单
            operationId: Admin_UpdateMenu
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.UpdateMenuReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.UpdateMenuReply'
        delete:
            tags:
                - Admin
            description: 删除菜单
            operationId: Admin_DeleteMenu
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.DeleteMenuReply'
    /admin/v1/menus/{id}/trees:
        get:
            tags:
                - Admin
            description: 获取树形菜单
            operationId: Admin_ListMenuTree
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.ListMenuTreeReply'
    /admin/v1/posts:
        get:
            tags:
                - Admin
            description: 列表职位
            operationId: Admin_ListPost
            parameters:
                - name: page
                  in: query
                  description: 当前页
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每一页的行数
                  schema:
                    type: integer
                    format: int32
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.protobuf.PagingReply'
        post:
            tags:
                - Admin
            description: 创建职位
            operationId: Admin_CreatePost
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.CreatePostReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.CreatePostReply'
    /admin/v1/posts/{id}:
        get:
            tags:
                - Admin
            description: 获取职位
            operationId: Admin_GetPost
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.Post'
        put:
            tags:
                - Admin
            description: 修改职位
            operationId: Admin_UpdatePost
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.UpdatePostReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.UpdatePostReply'
        delete:
            tags:
                - Admin
            description: 删除职位
            operationId: Admin_DeletePost
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.DeletePostReply'
    /admin/v1/posts/{id}/state:
        put:
            tags:
                - Admin
            description: 设置领域状态
            operationId: Admin_UpdatePostState
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.UpdatePostStateReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.UpdatePostStateReply'
    /admin/v1/resources:
        get:
            tags:
                - Admin
            description: |-
                资源模块
                 列表资源
            operationId: Admin_ListResource
            parameters:
                - name: page
                  in: query
                  description: 当前页
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每一页的行数
                  schema:
                    type: integer
                    format: int32
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.protobuf.PagingReply'
        post:
            tags:
                - Admin
            description: 创建资源
            operationId: Admin_CreateResource
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.CreateResourceReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.CreateResourceReply'
    /admin/v1/resources/groups:
        get:
            tags:
                - Admin
            description: 列表资源-分组
            operationId: Admin_ListResourceGroup
            parameters:
                - name: page
                  in: query
                  description: 当前页
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每一页的行数
                  schema:
                    type: integer
                    format: int32
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.ListResourceGroupReply'
    /admin/v1/resources/{id}:
        get:
            tags:
                - Admin
            description: 获取资源
            operationId: Admin_GetResource
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.Resource'
        put:
            tags:
                - Admin
            description: 修改资源
            operationId: Admin_UpdateResource
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.UpdateResourceReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.UpdateResourceReply'
        delete:
            tags:
                - Admin
            description: 删除资源
            operationId: Admin_DeleteResource
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.DeleteResourceReply'
    /admin/v1/roles:
        get:
            tags:
                - Admin
            description: |-
                角色模块
                 列表角色
            operationId: Admin_ListRole
            parameters:
                - name: page
                  in: query
                  description: 当前页
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每一页的行数
                  schema:
                    type: integer
                    format: int32
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.protobuf.PagingReply'
        post:
            tags:
                - Admin
            description: 创建角色
            operationId: Admin_CreateRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.CreateRoleReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.CreateRoleReply'
    /admin/v1/roles/{id}:
        get:
            tags:
                - Admin
            description: 获取角色
            operationId: Admin_GetRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.Role'
        put:
            tags:
                - Admin
            description: 修改角色
            operationId: Admin_UpdateRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.UpdateRoleReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.UpdateRoleReply'
        delete:
            tags:
                - Admin
            description: 删除角色
            operationId: Admin_DeleteRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.DeleteRoleReply'
    /admin/v1/roles/{id}/menus:
        get:
            tags:
                - Admin
            description: 获取角色菜单
            operationId: Admin_ListRoleMenu
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.ListRoleMenuReply'
        post:
            tags:
                - Admin
            description: 处理角色菜单
            operationId: Admin_HandleRoleMenu
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.HandleRoleMenuReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.HandleRoleMenuReply'
    /admin/v1/roles/{id}/resources:
        post:
            tags:
                - Admin
            description: 处理角色资源
            operationId: Admin_HandleRoleResource
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.HandleRoleResourceReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.HandleRoleResourceReply'
    /admin/v1/roles/{id}/state:
        put:
            tags:
                - Admin
            description: 设置领域状态
            operationId: Admin_UpdateRoleState
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.UpdateRoleStateReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.UpdateRoleStateReply'
    /admin/v1/users:
        get:
            tags:
                - Admin
            description: 列表用户
            operationId: Admin_ListUser
            parameters:
                - name: page
                  in: query
                  description: 当前页
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每一页的行数
                  schema:
                    type: integer
                    format: int32
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.protobuf.PagingReply'
        post:
            tags:
                - Admin
            description: 创建用户
            operationId: Admin_CreateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.CreateUserReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.CreateUserReply'
    /admin/v1/users/domains:
        get:
            tags:
                - Admin
            description: |-
                // 获取用户菜单 - 弃用
                 rpc ListUserMenu (api.protobuf.PagingReq) returns (api.protobuf.PagingReply) {
                   option (google.api.http) = {
                     get: "/admin/v1/users/menus"
                   };
                 }
                 // 获取用户菜单-树形 - 弃用
                 rpc ListUserMenuTree (google.protobuf.Empty) returns (UserMenuTreeReply) {
                   option (google.api.http) = {
                     get: "/admin/v1/users/menus/trees"
                   };
                 }
                 当前登录用户拥有领域
            operationId: Admin_ListUserDomain
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.ListUserDomainReply'
    /admin/v1/users/existName:
        post:
            tags:
                - Admin
            description: 验证用户名是否存在
            operationId: Admin_ExistUserName
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.ExistUserNameReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.ExistUserNameReply'
    /admin/v1/users/info:
        get:
            tags:
                - Admin
            description: |-
                User 用户模块
                 当前登录用户概述
            operationId: Admin_GetUserInfo
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.User'
    /admin/v1/users/profiles:
        get:
            tags:
                - Admin
            description: 当前登录用户概述
            operationId: Admin_GetUserProfile
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.GetUserProfileReply'
    /admin/v1/users/roles:
        get:
            tags:
                - Admin
            description: 当前登录用户拥有角色
            operationId: Admin_ListUserRole
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.ListUserRoleReply'
    /admin/v1/users/roles/{roleId}/menus/trees:
        get:
            tags:
                - Admin
            description: 获取角色菜单树形列表
            operationId: Admin_ListUserRoleMenuTree
            parameters:
                - name: roleId
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.ListUserRoleMenuTreeReply'
    /admin/v1/users/roles/{roleId}/permissions:
        get:
            tags:
                - Admin
            description: 获取角色权限列表
            operationId: Admin_ListUserRolePermission
            parameters:
                - name: roleId
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.ListUserRolePermissionReply'
    /admin/v1/users/{id}:
        get:
            tags:
                - Admin
            description: 获取用户
            operationId: Admin_GetUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.User'
        put:
            tags:
                - Admin
            description: 修改用户
            operationId: Admin_UpdateUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.UpdateUserReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.UpdateUserReply'
        delete:
            tags:
                - Admin
            description: 删除用户
            operationId: Admin_DeleteUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.DeleteUserReply'
    /admin/v1/users/{id}/domainRoles:
        post:
            tags:
                - Admin
            description: 绑定用户领域权限
            operationId: Admin_HandleUserDomainRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.HandleUserDomainRoleReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.HandleUserDomainRoleReply'
    /admin/v1/users/{id}/domains:
        post:
            tags:
                - Admin
            description: 绑定用户领域
            operationId: Admin_HandleUserDomain
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.HandleUserDomainReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.HandleUserDomainReply'
components:
    schemas:
        api.admin.v1.Auth:
            type: object
            properties:
                name:
                    type: string
                    description: 用户名
                password:
                    type: string
                    description: 密码
        api.admin.v1.CreateDeptReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 创建部门
        api.admin.v1.CreateDeptReq:
            type: object
            properties:
                name:
                    type: string
                parentId:
                    type: integer
                    format: uint64
                sort:
                    type: integer
                    format: int32
                state:
                    type: integer
                    format: enum
                remarks:
                    type: string
            description: 请求 - 创建部门
        api.admin.v1.CreateDomainReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 创建领域
        api.admin.v1.CreateDomainReq:
            type: object
            properties:
                name:
                    type: string
                parentId:
                    type: integer
                    format: uint64
                sort:
                    type: integer
                    format: int32
                state:
                    type: integer
                    format: enum
                defaultRoleId:
                    type: integer
                    format: uint64
            description: 请求 - 创建领域
        api.admin.v1.CreateMenuReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 创建菜单
        api.admin.v1.CreateMenuReq:
            type: object
            properties:
                name:
                    type: string
                type:
                    type: integer
                    format: enum
                parentId:
                    type: integer
                    format: uint64
                path:
                    type: string
                hidden:
                    type: integer
                    format: enum
                component:
                    type: string
                permission:
                    type: string
                sort:
                    type: integer
                    format: int32
                icon:
                    type: string
                title:
                    type: string
                keepAlive:
                    type: integer
                    format: enum
                baseMenu:
                    type: integer
                    format: enum
                closeTab:
                    type: integer
                    format: enum
                extType:
                    type: integer
                    format: enum
                parameters:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.MenuParameter'
                buttons:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.MenuButton'
            description: 请求 - 创建菜单
        api.admin.v1.CreatePostReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 创建职位
        api.admin.v1.CreatePostReq:
            type: object
            properties:
                name:
                    type: string
                code:
                    type: string
                sort:
                    type: integer
                    format: int32
                state:
                    type: integer
                    format: enum
                remarks:
                    type: string
            description: 请求 - 创建职位
        api.admin.v1.CreateResourceReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 创建资源
        api.admin.v1.CreateResourceReq:
            type: object
            properties:
                name:
                    type: string
                path:
                    type: string
                method:
                    type: string
                group:
                    type: string
                description:
                    type: string
                operation:
                    type: string
            description: 请求 - 创建资源
        api.admin.v1.CreateRoleReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 创建角色
        api.admin.v1.CreateRoleReq:
            type: object
            properties:
                name:
                    type: string
                parentId:
                    type: integer
                    format: uint64
                defaultRouter:
                    type: string
                sort:
                    type: integer
                    format: int32
                state:
                    type: integer
                    format: enum
                remarks:
                    type: string
            description: 请求 - 创建角色
        api.admin.v1.CreateUserReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 创建用户
        api.admin.v1.CreateUserReq:
            type: object
            properties:
                name:
                    type: string
                avatar:
                    type: string
                password:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                birthday:
                    type: string
                gender:
                    type: integer
                    format: enum
                mobile:
                    type: string
                email:
                    type: string
                state:
                    type: integer
                    format: enum
            description: 请求 - 创建用户
        api.admin.v1.DeleteDeptReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 删除部门
        api.admin.v1.DeleteDomainReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 删除领域
        api.admin.v1.DeleteMenuReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 删除菜单
        api.admin.v1.DeletePostReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 删除职位
        api.admin.v1.DeleteResourceReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 删除资源
        api.admin.v1.DeleteRoleReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 删除角色
        api.admin.v1.DeleteUserReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 删除用户
        api.admin.v1.Dept:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                id:
                    type: integer
                    format: uint64
                name:
                    type: string
                parentId:
                    type: integer
                    format: uint64
                sort:
                    type: integer
                    format: int32
                remarks:
                    type: string
                state:
                    type: integer
                    format: enum
                children:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.Dept'
            description: 部门模块
        api.admin.v1.Domain:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                id:
                    type: integer
                    format: uint64
                name:
                    type: string
                parentId:
                    type: integer
                    format: uint64
                sort:
                    type: integer
                    format: int32
                state:
                    type: integer
                    format: enum
                defaultRoleId:
                    type: integer
                    format: uint64
                children:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.Domain'
            description: 领域模块
        api.admin.v1.EmailLoginReq_EmailField:
            type: object
            properties:
                email:
                    type: string
                code:
                    type: string
        api.admin.v1.ExistUserNameReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 验证用户是否存在
        api.admin.v1.ExistUserNameReq:
            type: object
            properties:
                name:
                    type: string
            description: 请求 - 验证用户是否存在
        api.admin.v1.GetUserProfileReply:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.admin.v1.User'
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.Role'
            description: 回应 - 用户概况详情
        api.admin.v1.HandleDomainMenuReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 处理领域菜单
        api.admin.v1.HandleDomainMenuReq_Data:
            type: object
            properties:
                menus:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.HandleDomainMenuReq_Menu'
        api.admin.v1.HandleDomainMenuReq_Menu:
            type: object
            properties:
                id:
                    type: integer
                    format: uint64
                menuParameterIds:
                    type: array
                    items:
                        type: integer
                        format: uint64
                menuButtonIds:
                    type: array
                    items:
                        type: integer
                        format: uint64
        api.admin.v1.HandleRoleMenuReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 处理角色菜单
        api.admin.v1.HandleRoleMenuReq_Data:
            type: object
            properties:
                menus:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.HandleRoleMenuReq_Menu'
        api.admin.v1.HandleRoleMenuReq_Menu:
            type: object
            properties:
                id:
                    type: integer
                    format: uint64
                menuParameterIds:
                    type: array
                    items:
                        type: integer
                        format: uint64
                menuButtonIds:
                    type: array
                    items:
                        type: integer
                        format: uint64
        api.admin.v1.HandleRoleResourceReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 处理角色资源
        api.admin.v1.HandleRoleResourceReq_Data:
            type: object
            properties:
                resourceIds:
                    type: array
                    items:
                        type: integer
                        format: uint64
        api.admin.v1.HandleUserDomainReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 绑定用户领域
        api.admin.v1.HandleUserDomainReq_Data:
            type: object
            properties:
                domainIds:
                    type: array
                    items:
                        type: integer
                        format: uint64
        api.admin.v1.HandleUserDomainRoleReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 绑定用户领域权限
        api.admin.v1.HandleUserDomainRoleReq_Data:
            type: object
            properties:
                domainId:
                    type: integer
                    format: uint64
                roleIds:
                    type: array
                    items:
                        type: integer
                        format: uint64
        api.admin.v1.ListDeptTreeReply:
            type: object
            properties:
                total:
                    type: integer
                    format: int32
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.Dept'
            description: 回应 - 获取树形部门
        api.admin.v1.ListDomainMenuReply:
            type: object
            properties:
                total:
                    type: integer
                    format: int32
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.Menu'
            description: 回应 - 获取领域菜单
        api.admin.v1.ListDomainTreeReply:
            type: object
            properties:
                total:
                    type: integer
                    format: int32
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.Domain'
        api.admin.v1.ListMenuTreeReply:
            type: object
            properties:
                total:
                    type: integer
                    format: int32
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.Menu'
            description: 回应 - 获取树形菜单
        api.admin.v1.ListResourceGroupReply:
            type: object
            properties:
                total:
                    type: integer
                    format: int32
                items:
                    type: array
                    items:
                        type: string
            description: 回应 - 创建资源
        api.admin.v1.ListRoleMenuReply:
            type: object
            properties:
                total:
                    type: integer
                    format: int32
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.Menu'
            description: 回应 - 获取角色菜单
        api.admin.v1.ListUserDomainReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.Domain'
                total:
                    type: integer
                    format: int32
            description: 回应 - 用户领域
        api.admin.v1.ListUserRoleMenuTreeReply:
            type: object
            properties:
                total:
                    type: integer
                    format: int32
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.RouterMenu'
            description: 回应 - 获取用户角色菜单列表-树形
        api.admin.v1.ListUserRolePermissionReply:
            type: object
            properties:
                total:
                    type: integer
                    format: int32
                items:
                    type: array
                    items:
                        type: string
            description: 回应 - 获取用户角色列表
        api.admin.v1.ListUserRoleReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.Role'
                total:
                    type: integer
                    format: int32
            description: 回应 - 用户角色
        api.admin.v1.LoginReply:
            type: object
            properties:
                token:
                    type: string
                    description: 登录token
                expireTime:
                    type: string
                    description: 过期时间
                    format: date-time
            description: 回应 - 登录
        api.admin.v1.LogoutReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 退出登录
        api.admin.v1.Menu:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                id:
                    type: integer
                    format: uint64
                name:
                    type: string
                type:
                    type: integer
                    format: enum
                parentId:
                    type: integer
                    format: uint64
                path:
                    type: string
                hidden:
                    type: integer
                    format: enum
                component:
                    type: string
                permission:
                    type: string
                sort:
                    type: integer
                    format: int32
                icon:
                    type: string
                title:
                    type: string
                keepAlive:
                    type: integer
                    format: enum
                baseMenu:
                    type: integer
                    format: enum
                closeTab:
                    type: integer
                    format: enum
                extType:
                    type: integer
                    format: enum
                children:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.Menu'
                parameters:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.MenuParameter'
                buttons:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.MenuButton'
            description: 菜单模块
        api.admin.v1.MenuButton:
            type: object
            properties:
                name:
                    type: string
                remarks:
                    type: string
        api.admin.v1.MenuParameter:
            type: object
            properties:
                type:
                    type: integer
                    format: enum
                name:
                    type: string
                value:
                    type: string
        api.admin.v1.PassLoginReq_PassField:
            type: object
            properties:
                account:
                    type: string
                password:
                    type: string
        api.admin.v1.Post:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                id:
                    type: integer
                    format: uint64
                name:
                    type: string
                code:
                    type: string
                sort:
                    type: integer
                    format: int32
                remarks:
                    type: string
                state:
                    type: integer
                    format: enum
            description: 职位模块
        api.admin.v1.RegisterReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 注册
        api.admin.v1.Resource:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                id:
                    type: integer
                    format: uint64
                name:
                    type: string
                path:
                    type: string
                method:
                    type: string
                group:
                    type: string
                description:
                    type: string
                operation:
                    type: string
            description: 资源模块
        api.admin.v1.Role:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                id:
                    type: integer
                    format: uint64
                name:
                    type: string
                parentId:
                    type: integer
                    format: uint64
                defaultRouter:
                    type: string
                sort:
                    type: integer
                    format: int32
                state:
                    type: integer
                    format: enum
                remarks:
                    type: string
            description: 角色模块
        api.admin.v1.RouterMenu:
            type: object
            properties:
                name:
                    type: string
                path:
                    type: string
                component:
                    type: string
                redirect:
                    type: string
                meta:
                    $ref: '#/components/schemas/api.admin.v1.RouterMenu_Meta'
                children:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.RouterMenu'
            description: 路由菜单
        api.admin.v1.RouterMenu_Meta:
            type: object
            properties:
                title:
                    type: string
                    description: 路由title  一般必填
                ignoreKeepAlive:
                    type: boolean
                    description: 是否忽略KeepAlive缓存
                icon:
                    type: string
                    description: 图标，也是菜单图标
                frameSrc:
                    type: string
                    description: 内嵌iframe的地址
                hideBreadcrumb:
                    type: boolean
                    description: 隐藏该路由在面包屑上面的显示
                hideMenu:
                    type: boolean
                    description: 当前路由不再菜单显示
                orderNo:
                    type: integer
                    description: 菜单排序，只对第一级有效
                    format: int32
                currentActiveMenu:
                    type: string
                    description: 当前激活的菜单。用于配置详情页时左侧激活的菜单路径
        api.admin.v1.SmsLoginReq_SmsField:
            type: object
            properties:
                mobile:
                    type: string
                code:
                    type: string
        api.admin.v1.UpdateDeptReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 创建部门
        api.admin.v1.UpdateDeptReq_Data:
            type: object
            properties:
                name:
                    type: string
                parentId:
                    type: integer
                    format: uint64
                sort:
                    type: integer
                    format: int32
                state:
                    type: integer
                    format: enum
                remarks:
                    type: string
        api.admin.v1.UpdateDomainReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 创建领域
        api.admin.v1.UpdateDomainReq_Data:
            type: object
            properties:
                name:
                    type: string
                parentId:
                    type: integer
                    format: uint64
                sort:
                    type: integer
                    format: int32
                state:
                    type: integer
                    format: enum
                defaultRoleId:
                    type: integer
                    format: uint64
        api.admin.v1.UpdateDomainStateReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 创建领域-状态
        api.admin.v1.UpdateDomainStateReq_Data:
            type: object
            properties:
                state:
                    type: integer
                    format: enum
        api.admin.v1.UpdateMenuReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 创建菜单
        api.admin.v1.UpdateMenuReq_Data:
            type: object
            properties:
                name:
                    type: string
                type:
                    type: integer
                    format: enum
                parentId:
                    type: integer
                    format: uint64
                path:
                    type: string
                hidden:
                    type: integer
                    format: enum
                component:
                    type: string
                permission:
                    type: string
                sort:
                    type: integer
                    format: int32
                icon:
                    type: string
                title:
                    type: string
                keepAlive:
                    type: integer
                    format: enum
                baseMenu:
                    type: integer
                    format: enum
                closeTab:
                    type: integer
                    format: enum
                extType:
                    type: integer
                    format: enum
                parameters:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.MenuParameter'
                buttons:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.MenuButton'
        api.admin.v1.UpdatePostReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 创建职位
        api.admin.v1.UpdatePostReq_Data:
            type: object
            properties:
                name:
                    type: string
                code:
                    type: string
                sort:
                    type: integer
                    format: int32
                state:
                    type: integer
                    format: enum
                remarks:
                    type: string
        api.admin.v1.UpdatePostStateReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 创建职位-状态
        api.admin.v1.UpdatePostStateReq_Data:
            type: object
            properties:
                state:
                    type: integer
                    format: enum
        api.admin.v1.UpdateResourceReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 创建资源
        api.admin.v1.UpdateResourceReq_Data:
            type: object
            properties:
                name:
                    type: string
                path:
                    type: string
                method:
                    type: string
                group:
                    type: string
                description:
                    type: string
                operation:
                    type: string
        api.admin.v1.UpdateRoleReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 创建角色
        api.admin.v1.UpdateRoleReq_Data:
            type: object
            properties:
                name:
                    type: string
                parentId:
                    type: integer
                    format: uint64
                defaultRouter:
                    type: string
                sort:
                    type: integer
                    format: int32
                state:
                    type: integer
                    format: enum
                remarks:
                    type: string
        api.admin.v1.UpdateRoleStateReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 创建角色
        api.admin.v1.UpdateRoleStateReq_Data:
            type: object
            properties:
                state:
                    type: integer
                    format: enum
        api.admin.v1.UpdateUserReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: 回应 - 修改用户
        api.admin.v1.UpdateUserReq_Data:
            type: object
            properties:
                name:
                    type: string
                password:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                birthday:
                    type: string
                    description: x must be less than the Unix Epoch
                gender:
                    type: integer
                    format: enum
                mobile:
                    type: string
                email:
                    type: string
                state:
                    type: integer
                    format: enum
                avatar:
                    type: string
        api.admin.v1.User:
            type: object
            properties:
                id:
                    type: integer
                    format: uint64
                name:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                birthday:
                    type: string
                gender:
                    type: integer
                    format: enum
                mobile:
                    type: string
                email:
                    type: string
                avatar:
                    type: string
                state:
                    type: integer
                    format: enum
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
            description: 用户模块
        api.protobuf.PagingReply:
            type: object
            properties:
                total:
                    type: integer
                    format: int32
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/google.protobuf.Any'
            description: 分页通用结果
        google.protobuf.Any:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
tags:
    - name: Admin
