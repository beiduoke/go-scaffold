# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /admin/v1/apis:
        get:
            tags:
                - ApiService
            description: 列表接口
            operationId: ApiService_ListApi
            parameters:
                - name: page
                  in: query
                  description: 当前页
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每一页的行数
                  schema:
                    type: integer
                    format: int32
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.protobuf.PagingReply'
        post:
            tags:
                - ApiService
            description: 创建接口
            operationId: ApiService_CreateApi
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.service.CreateApiReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.CreateApiReply'
    /admin/v1/apis/{id}:
        get:
            tags:
                - ApiService
            description: 获取接口
            operationId: ApiService_GetApi
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.Api'
        put:
            tags:
                - ApiService
            description: 修改接口
            operationId: ApiService_UpdateApi
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.service.UpdateApiReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.UpdateApiReply'
        delete:
            tags:
                - ApiService
            description: 删除接口
            operationId: ApiService_DeleteApi
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.DeleteApiReply'
    /admin/v1/auth/login:
        post:
            tags:
                - AuthService
            description: 登陆
            operationId: AuthService_Login
            parameters:
                - name: domain
                  in: query
                  description: 领域
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.service.Auth'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.LoginReply'
    /admin/v1/auth/logout:
        post:
            tags:
                - AuthService
            description: 登出
            operationId: AuthService_Logout
            requestBody:
                content:
                    application/json: {}
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.LogoutReply'
    /admin/v1/auth/register:
        post:
            tags:
                - AuthService
            description: 注册
            operationId: AuthService_Register
            parameters:
                - name: domain
                  in: query
                  description: 领域
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.service.Auth'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.RegisterReply'
    /admin/v1/authorities:
        get:
            tags:
                - AuthorityService
            description: |-
                权限模块
                 列表权限
            operationId: AuthorityService_ListAuthority
            parameters:
                - name: page
                  in: query
                  description: 当前页
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每一页的行数
                  schema:
                    type: integer
                    format: int32
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.protobuf.PagingReply'
        post:
            tags:
                - AuthorityService
            description: 创建权限
            operationId: AuthorityService_CreateAuthority
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.service.Authority'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.CreateAuthorityReply'
    /admin/v1/authorities/{id}:
        get:
            tags:
                - AuthorityService
            description: 获取权限
            operationId: AuthorityService_GetAuthority
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.Authority'
        put:
            tags:
                - AuthorityService
            description: 修改权限
            operationId: AuthorityService_UpdateAuthority
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.service.UpdateAuthorityReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.UpdateAuthorityReply'
        delete:
            tags:
                - AuthorityService
            description: 删除权限
            operationId: AuthorityService_DeleteAuthority
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.DeleteAuthorityReply'
    /admin/v1/domains:
        get:
            tags:
                - DomainService
            description: 列表领域
            operationId: DomainService_ListDomain
            parameters:
                - name: page
                  in: query
                  description: 当前页
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每一页的行数
                  schema:
                    type: integer
                    format: int32
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.protobuf.PagingReply'
        post:
            tags:
                - DomainService
            description: 创建领域
            operationId: DomainService_CreateDomain
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.service.Domain'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.CreateDomainReply'
    /admin/v1/domains/{id}:
        get:
            tags:
                - DomainService
            description: 获取领域
            operationId: DomainService_GetDomain
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.Domain'
        put:
            tags:
                - DomainService
            description: 修改领域
            operationId: DomainService_UpdateDomain
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.service.UpdateDomainReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.UpdateDomainReply'
        delete:
            tags:
                - DomainService
            description: 删除领域
            operationId: DomainService_DeleteDomain
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.DeleteDomainReply'
    /admin/v1/menus:
        get:
            tags:
                - MenuService
            description: 列表菜单
            operationId: MenuService_ListMenu
            parameters:
                - name: page
                  in: query
                  description: 当前页
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每一页的行数
                  schema:
                    type: integer
                    format: int32
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.protobuf.PagingReply'
        post:
            tags:
                - MenuService
            description: 创建菜单
            operationId: MenuService_CreateMenu
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.service.CreateMenuReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.CreateMenuReply'
    /admin/v1/menus/tree/{id}:
        get:
            tags:
                - MenuService
            description: 获取树形菜单
            operationId: MenuService_GetMenuTree
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.Menu'
    /admin/v1/menus/{id}:
        get:
            tags:
                - MenuService
            description: 获取菜单
            operationId: MenuService_GetMenu
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.Menu'
        put:
            tags:
                - MenuService
            description: 修改菜单
            operationId: MenuService_UpdateMenu
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.service.UpdateMenuReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.UpdateMenuReply'
        delete:
            tags:
                - MenuService
            description: 删除菜单
            operationId: MenuService_DeleteMenu
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.DeleteMenuReply'
    /admin/v1/roles:
        get:
            tags:
                - AuthorityService
            description: 列表角色
            operationId: AuthorityService_ListRole
            parameters:
                - name: page
                  in: query
                  description: 当前页
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每一页的行数
                  schema:
                    type: integer
                    format: int32
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.protobuf.PagingReply'
        post:
            tags:
                - AuthorityService
            description: 创建角色
            operationId: AuthorityService_CreateRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.service.Role'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.CreateRoleReply'
    /admin/v1/roles/{id}:
        get:
            tags:
                - AuthorityService
            description: 获取角色
            operationId: AuthorityService_GetRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.Role'
        put:
            tags:
                - AuthorityService
            description: 修改角色
            operationId: AuthorityService_UpdateRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.service.UpdateRoleReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.UpdateRoleReply'
        delete:
            tags:
                - AuthorityService
            description: 删除角色
            operationId: AuthorityService_DeleteRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.DeleteRoleReply'
    /admin/v1/users:
        get:
            tags:
                - UserService
            description: 列表用户
            operationId: UserService_ListUser
            parameters:
                - name: page
                  in: query
                  description: 当前页
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每一页的行数
                  schema:
                    type: integer
                    format: int32
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.protobuf.PagingReply'
        post:
            tags:
                - UserService
            description: 创建用户
            operationId: UserService_CreateUser
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.service.CreateUserReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.CreateUserReply'
    /admin/v1/users/menus:
        get:
            tags:
                - UserService
            description: 获取用户菜单
            operationId: UserService_GetUserMenu
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.GetUserMenuReply'
    /admin/v1/users/profiles:
        get:
            tags:
                - UserService
            description: |-
                User 用户模块
                 当前登录用户概述
            operationId: UserService_GetUserProfile
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.User'
    /admin/v1/users/{id}:
        get:
            tags:
                - UserService
            description: 列表用户
            operationId: UserService_GetUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.User'
        put:
            tags:
                - UserService
            description: 修改用户
            operationId: UserService_UpdateUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.v1.service.UpdateUserReq_Data'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.UpdateUserReply'
        delete:
            tags:
                - UserService
            description: 删除用户
            operationId: UserService_DeleteUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.v1.service.DeleteUserReply'
    /web/v1/login:
        post:
            tags:
                - Web
            description: 登陆
            operationId: Web_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.web.v1.LoginReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.web.v1.User'
    /web/v1/logout:
        post:
            tags:
                - Web
            description: 登出
            operationId: Web_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.web.v1.LogoutReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.web.v1.LogoutReply'
    /web/v1/users:
        get:
            tags:
                - Web
            description: 用户列表
            operationId: Web_ListUser
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.web.v1.ListUserReply'
components:
    schemas:
        api.admin.v1.Api:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                id:
                    type: integer
                    format: uint64
                name:
                    type: string
            description: 接口模块
        api.admin.v1.Auth:
            type: object
            properties:
                name:
                    type: string
                    description: 用户名
                password:
                    type: string
                    description: 密码
        api.admin.v1.Authority:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                id:
                    type: integer
                    format: uint64
                name:
                    type: string
                state:
                    type: integer
                    format: enum
            description: 权限模块
        api.admin.v1.CreateApiReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 创建接口
        api.admin.v1.CreateAuthorityReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 创建权限
        api.admin.v1.CreateDomainReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 创建领域
        api.admin.v1.CreateMenuReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 创建菜单
        api.admin.v1.CreateUserReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 创建用户
        api.admin.v1.CreateUserReq_Data:
            type: object
            properties:
                name:
                    type: string
                password:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                birthday:
                    type: string
                    format: date-time
                gender:
                    type: integer
                    format: int32
                mobile:
                    type: string
                email:
                    type: string
                state:
                    type: integer
                    format: enum
        api.admin.v1.DeleteApiReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 删除接口
        api.admin.v1.DeleteAuthorityReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 删除权限
        api.admin.v1.DeleteDomainReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 删除领域
        api.admin.v1.DeleteMenuReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 删除菜单
        api.admin.v1.DeleteUserReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 删除用户
        api.admin.v1.Domain:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                id:
                    type: integer
                    format: uint64
                name:
                    type: string
                state:
                    type: integer
                    format: enum
            description: 领域模块
        api.admin.v1.GetUserMenuReply:
            type: object
            properties:
                name:
                    type: string
                path:
                    type: string
                component:
                    type: string
                childrens:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.GetUserMenuReply'
            description: 回应 - 获取用户菜单
        api.admin.v1.LoginReply:
            type: object
            properties:
                token:
                    type: string
                    description: 登录token
                expireTime:
                    type: string
                    description: 过期时间
                    format: date-time
            description: 回应 - 登录
        api.admin.v1.LogoutReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 退出登录
        api.admin.v1.Menu:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                id:
                    type: integer
                    format: uint64
                name:
                    type: string
                parentId:
                    type: integer
                    format: uint64
                path:
                    type: string
                hidden:
                    type: integer
                    format: enum
                component:
                    type: string
                sort:
                    type: integer
                    format: int64
                icon:
                    type: string
                title:
                    type: string
                keepAlive:
                    type: integer
                    format: enum
                baseMenu:
                    type: integer
                    format: enum
                closeTab:
                    type: integer
                    format: enum
                childrens:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.Menu'
            description: 菜单模块
        api.admin.v1.RegisterReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 注册
        api.admin.v1.UpdateApiReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 创建接口
        api.admin.v1.UpdateApiReq_Data:
            type: object
            properties: {}
        api.admin.v1.UpdateAuthorityReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 创建权限
        api.admin.v1.UpdateAuthorityReq_Data:
            type: object
            properties: {}
        api.admin.v1.UpdateDomainReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 创建领域
        api.admin.v1.UpdateDomainReq_Data:
            type: object
            properties: {}
        api.admin.v1.UpdateMenuReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 创建菜单
        api.admin.v1.UpdateMenuReq_Data:
            type: object
            properties: {}
        api.admin.v1.UpdateUserReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 修改用户
        api.admin.v1.UpdateUserReq_Data:
            type: object
            properties:
                name:
                    type: string
                password:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                birthday:
                    type: string
                    format: date-time
                gender:
                    type: integer
                    format: int32
                mobile:
                    type: string
                email:
                    type: string
                state:
                    type: integer
                    format: enum
        api.admin.v1.User:
            type: object
            properties:
                id:
                    type: integer
                    format: uint64
                name:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                birthday:
                    type: string
                    format: date-time
                gender:
                    type: integer
                    format: enum
                mobile:
                    type: string
                email:
                    type: string
                state:
                    type: integer
                    format: enum
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                authoritys:
                    type: string
            description: 用户模块
        api.admin.v1.service.Api:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                id:
                    type: integer
                    format: uint64
                name:
                    type: string
            description: 接口模块
        api.admin.v1.service.Auth:
            type: object
            properties:
                name:
                    type: string
                    description: 用户名
                password:
                    type: string
                    description: 密码
        api.admin.v1.service.Authority:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                id:
                    type: integer
                    format: uint64
                name:
                    type: string
                state:
                    type: integer
                    format: enum
            description: 权限模块
        api.admin.v1.service.CreateApiReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 创建接口
        api.admin.v1.service.CreateApiReq_Data:
            type: object
            properties:
                name:
                    type: string
        api.admin.v1.service.CreateAuthorityReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 创建权限
        api.admin.v1.service.CreateDomainReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 创建领域
        api.admin.v1.service.CreateMenuReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 创建菜单
        api.admin.v1.service.CreateMenuReq_Data:
            type: object
            properties:
                name:
                    type: string
        api.admin.v1.service.CreateRoleReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 创建角色
        api.admin.v1.service.CreateUserReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 创建用户
        api.admin.v1.service.CreateUserReq_Data:
            type: object
            properties:
                name:
                    type: string
                password:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                birthday:
                    type: string
                    format: date-time
                gender:
                    type: integer
                    format: int32
                mobile:
                    type: string
                email:
                    type: string
                state:
                    type: integer
                    format: enum
        api.admin.v1.service.DeleteApiReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 删除接口
        api.admin.v1.service.DeleteAuthorityReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 删除权限
        api.admin.v1.service.DeleteDomainReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 删除领域
        api.admin.v1.service.DeleteMenuReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 删除菜单
        api.admin.v1.service.DeleteRoleReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 删除角色
        api.admin.v1.service.DeleteUserReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 删除用户
        api.admin.v1.service.Domain:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                id:
                    type: integer
                    format: uint64
                name:
                    type: string
                state:
                    type: integer
                    format: enum
            description: 领域模块
        api.admin.v1.service.GetUserMenuReply:
            type: object
            properties:
                name:
                    type: string
                path:
                    type: string
                component:
                    type: string
                childrens:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.service.GetUserMenuReply'
            description: 回应 - 获取用户菜单
        api.admin.v1.service.LoginReply:
            type: object
            properties:
                token:
                    type: string
                    description: 登录token
                expireTime:
                    type: string
                    description: 过期时间
                    format: date-time
            description: 回应 - 登录
        api.admin.v1.service.LogoutReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 退出登录
        api.admin.v1.service.Menu:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                id:
                    type: integer
                    format: uint64
                name:
                    type: string
                parentId:
                    type: integer
                    format: uint64
                path:
                    type: string
                hidden:
                    type: integer
                    format: enum
                component:
                    type: string
                sort:
                    type: integer
                    format: int64
                icon:
                    type: string
                title:
                    type: string
                keepAlive:
                    type: integer
                    format: enum
                baseMenu:
                    type: integer
                    format: enum
                closeTab:
                    type: integer
                    format: enum
                childrens:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.v1.service.Menu'
            description: 菜单模块
        api.admin.v1.service.RegisterReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 注册
        api.admin.v1.service.Role:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                id:
                    type: integer
                    format: uint64
                name:
                    type: string
            description: 角色模块
        api.admin.v1.service.UpdateApiReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 创建接口
        api.admin.v1.service.UpdateApiReq_Data:
            type: object
            properties: {}
        api.admin.v1.service.UpdateAuthorityReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 创建权限
        api.admin.v1.service.UpdateAuthorityReq_Data:
            type: object
            properties: {}
        api.admin.v1.service.UpdateDomainReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 创建领域
        api.admin.v1.service.UpdateDomainReq_Data:
            type: object
            properties:
                name:
                    type: string
        api.admin.v1.service.UpdateMenuReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 创建菜单
        api.admin.v1.service.UpdateMenuReq_Data:
            type: object
            properties: {}
        api.admin.v1.service.UpdateRoleReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 创建角色
        api.admin.v1.service.UpdateRoleReq_Data:
            type: object
            properties: {}
        api.admin.v1.service.UpdateUserReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
            description: 回应 - 修改用户
        api.admin.v1.service.UpdateUserReq_Data:
            type: object
            properties:
                name:
                    type: string
                password:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                birthday:
                    type: string
                    format: date-time
                gender:
                    type: integer
                    format: int32
                mobile:
                    type: string
                email:
                    type: string
                state:
                    type: integer
                    format: enum
        api.admin.v1.service.User:
            type: object
            properties:
                id:
                    type: integer
                    format: uint64
                name:
                    type: string
                password:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                birthday:
                    type: string
                    format: date-time
                gender:
                    type: integer
                    format: int32
                mobile:
                    type: string
                email:
                    type: string
                state:
                    type: integer
                    format: enum
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                authoritys:
                    type: string
        api.protobuf.PagingReply:
            type: object
            properties:
                total:
                    type: integer
                    format: int32
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/google.protobuf.Any'
            description: 分页通用结果
        api.web.v1.ListUserReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.web.v1.User'
                total:
                    type: integer
                    format: int32
        api.web.v1.LoginReq:
            type: object
            properties:
                userName:
                    type: string
                    description: 用户名
                password:
                    type: string
            description: 请求 - 登录
        api.web.v1.LogoutReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint64
            description: 回应 - 登出
        api.web.v1.LogoutReq:
            type: object
            properties:
                id:
                    type: integer
                    format: uint64
            description: 请求 - 登出
        api.web.v1.User:
            type: object
            properties:
                id:
                    type: integer
                    format: uint64
                userName:
                    type: string
                password:
                    type: string
                nickName:
                    type: string
                email:
                    type: string
                authoritys:
                    type: array
                    items:
                        type: string
                token:
                    type: string
        google.protobuf.Any:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
tags:
    - name: Admin
      description: The greeting service definition.
    - name: ApiService
      description: The api service definition.
    - name: AuthService
      description: The greeting service definition.
    - name: AuthorityService
      description: The authority service definition.
    - name: DomainService
      description: The domain service definition.
    - name: MenuService
      description: The menu service definition.
    - name: UserService
      description: The greeting service definition.
    - name: Web
