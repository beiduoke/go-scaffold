// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: protobuf/enum.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Sort int32

const (
	Sort_SORT_UNSPECIFIED Sort = 0
	Sort_SORT_DESC        Sort = 1
	Sort_SORT_ASC         Sort = 2
)

// Enum value maps for Sort.
var (
	Sort_name = map[int32]string{
		0: "SORT_UNSPECIFIED",
		1: "SORT_DESC",
		2: "SORT_ASC",
	}
	Sort_value = map[string]int32{
		"SORT_UNSPECIFIED": 0,
		"SORT_DESC":        1,
		"SORT_ASC":         2,
	}
)

func (x Sort) Enum() *Sort {
	p := new(Sort)
	*p = x
	return p
}

func (x Sort) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sort) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_enum_proto_enumTypes[0].Descriptor()
}

func (Sort) Type() protoreflect.EnumType {
	return &file_protobuf_enum_proto_enumTypes[0]
}

func (x Sort) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Sort.Descriptor instead.
func (Sort) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_enum_proto_rawDescGZIP(), []int{0}
}

type State int32

const (
	State_STATE_UNSPECIFIED State = 0
	State_STATE_ACTIVE      State = 1
	State_STATE_INACTIVE    State = 2
	State_STATE_BANNED      State = 3
)

// Enum value maps for State.
var (
	State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "STATE_ACTIVE",
		2: "STATE_INACTIVE",
		3: "STATE_BANNED",
	}
	State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"STATE_ACTIVE":      1,
		"STATE_INACTIVE":    2,
		"STATE_BANNED":      3,
	}
)

func (x State) Enum() *State {
	p := new(State)
	*p = x
	return p
}

func (x State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_enum_proto_enumTypes[1].Descriptor()
}

func (State) Type() protoreflect.EnumType {
	return &file_protobuf_enum_proto_enumTypes[1]
}

func (x State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State.Descriptor instead.
func (State) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_enum_proto_rawDescGZIP(), []int{1}
}

type Enabled int32

const (
	Enabled_ENABLED_UNSPECIFIED Enabled = 0
	Enabled_ENABLED_YES         Enabled = 1
	Enabled_ENABLED_NO          Enabled = 2
)

// Enum value maps for Enabled.
var (
	Enabled_name = map[int32]string{
		0: "ENABLED_UNSPECIFIED",
		1: "ENABLED_YES",
		2: "ENABLED_NO",
	}
	Enabled_value = map[string]int32{
		"ENABLED_UNSPECIFIED": 0,
		"ENABLED_YES":         1,
		"ENABLED_NO":          2,
	}
)

func (x Enabled) Enum() *Enabled {
	p := new(Enabled)
	*p = x
	return p
}

func (x Enabled) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enabled) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_enum_proto_enumTypes[2].Descriptor()
}

func (Enabled) Type() protoreflect.EnumType {
	return &file_protobuf_enum_proto_enumTypes[2]
}

func (x Enabled) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enabled.Descriptor instead.
func (Enabled) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_enum_proto_rawDescGZIP(), []int{2}
}

type UserGender int32

const (
	UserGender_USER_GENDER_UNSPECIFIED UserGender = 0
	UserGender_USER_GENDER_MAN         UserGender = 1
	UserGender_USER_GENDER_WOMAN       UserGender = 2
)

// Enum value maps for UserGender.
var (
	UserGender_name = map[int32]string{
		0: "USER_GENDER_UNSPECIFIED",
		1: "USER_GENDER_MAN",
		2: "USER_GENDER_WOMAN",
	}
	UserGender_value = map[string]int32{
		"USER_GENDER_UNSPECIFIED": 0,
		"USER_GENDER_MAN":         1,
		"USER_GENDER_WOMAN":       2,
	}
)

func (x UserGender) Enum() *UserGender {
	p := new(UserGender)
	*p = x
	return p
}

func (x UserGender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserGender) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_enum_proto_enumTypes[3].Descriptor()
}

func (UserGender) Type() protoreflect.EnumType {
	return &file_protobuf_enum_proto_enumTypes[3]
}

func (x UserGender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserGender.Descriptor instead.
func (UserGender) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_enum_proto_rawDescGZIP(), []int{3}
}

type UserState int32

const (
	UserState_USER_STATE_UNSPECIFIED UserState = 0
	UserState_USER_STATE_ACTIVE      UserState = 1
	UserState_USER_STATE_INACTIVE    UserState = 2
	UserState_USER_STATE_BANNED      UserState = 3
)

// Enum value maps for UserState.
var (
	UserState_name = map[int32]string{
		0: "USER_STATE_UNSPECIFIED",
		1: "USER_STATE_ACTIVE",
		2: "USER_STATE_INACTIVE",
		3: "USER_STATE_BANNED",
	}
	UserState_value = map[string]int32{
		"USER_STATE_UNSPECIFIED": 0,
		"USER_STATE_ACTIVE":      1,
		"USER_STATE_INACTIVE":    2,
		"USER_STATE_BANNED":      3,
	}
)

func (x UserState) Enum() *UserState {
	p := new(UserState)
	*p = x
	return p
}

func (x UserState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserState) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_enum_proto_enumTypes[4].Descriptor()
}

func (UserState) Type() protoreflect.EnumType {
	return &file_protobuf_enum_proto_enumTypes[4]
}

func (x UserState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserState.Descriptor instead.
func (UserState) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_enum_proto_rawDescGZIP(), []int{4}
}

type DomainState int32

const (
	DomainState_DOMAIN_STATE_UNSPECIFIED DomainState = 0
	DomainState_DOMAIN_STATE_ACTIVE      DomainState = 1
	DomainState_DOMAIN_STATE_INACTIVE    DomainState = 2
	DomainState_DOMAIN_STATE_BANNED      DomainState = 3
)

// Enum value maps for DomainState.
var (
	DomainState_name = map[int32]string{
		0: "DOMAIN_STATE_UNSPECIFIED",
		1: "DOMAIN_STATE_ACTIVE",
		2: "DOMAIN_STATE_INACTIVE",
		3: "DOMAIN_STATE_BANNED",
	}
	DomainState_value = map[string]int32{
		"DOMAIN_STATE_UNSPECIFIED": 0,
		"DOMAIN_STATE_ACTIVE":      1,
		"DOMAIN_STATE_INACTIVE":    2,
		"DOMAIN_STATE_BANNED":      3,
	}
)

func (x DomainState) Enum() *DomainState {
	p := new(DomainState)
	*p = x
	return p
}

func (x DomainState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DomainState) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_enum_proto_enumTypes[5].Descriptor()
}

func (DomainState) Type() protoreflect.EnumType {
	return &file_protobuf_enum_proto_enumTypes[5]
}

func (x DomainState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DomainState.Descriptor instead.
func (DomainState) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_enum_proto_rawDescGZIP(), []int{5}
}

type RoleState int32

const (
	RoleState_ROLE_STATE_UNSPECIFIED RoleState = 0
	RoleState_ROLE_STATE_ACTIVE      RoleState = 1
	RoleState_ROLE_STATE_INACTIVE    RoleState = 2
	RoleState_ROLE_STATE_BANNED      RoleState = 3
)

// Enum value maps for RoleState.
var (
	RoleState_name = map[int32]string{
		0: "ROLE_STATE_UNSPECIFIED",
		1: "ROLE_STATE_ACTIVE",
		2: "ROLE_STATE_INACTIVE",
		3: "ROLE_STATE_BANNED",
	}
	RoleState_value = map[string]int32{
		"ROLE_STATE_UNSPECIFIED": 0,
		"ROLE_STATE_ACTIVE":      1,
		"ROLE_STATE_INACTIVE":    2,
		"ROLE_STATE_BANNED":      3,
	}
)

func (x RoleState) Enum() *RoleState {
	p := new(RoleState)
	*p = x
	return p
}

func (x RoleState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoleState) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_enum_proto_enumTypes[6].Descriptor()
}

func (RoleState) Type() protoreflect.EnumType {
	return &file_protobuf_enum_proto_enumTypes[6]
}

func (x RoleState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoleState.Descriptor instead.
func (RoleState) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_enum_proto_rawDescGZIP(), []int{6}
}

type MenuType int32

const (
	MenuType_MENU_TYPE_UNSPECIFIED MenuType = 0
	MenuType_MENU_TYPE_CATALOGUE   MenuType = 1
	MenuType_MENU_TYPE_MENU        MenuType = 2
	MenuType_MENU_TYPE_ABILITY     MenuType = 3
)

// Enum value maps for MenuType.
var (
	MenuType_name = map[int32]string{
		0: "MENU_TYPE_UNSPECIFIED",
		1: "MENU_TYPE_CATALOGUE",
		2: "MENU_TYPE_MENU",
		3: "MENU_TYPE_ABILITY",
	}
	MenuType_value = map[string]int32{
		"MENU_TYPE_UNSPECIFIED": 0,
		"MENU_TYPE_CATALOGUE":   1,
		"MENU_TYPE_MENU":        2,
		"MENU_TYPE_ABILITY":     3,
	}
)

func (x MenuType) Enum() *MenuType {
	p := new(MenuType)
	*p = x
	return p
}

func (x MenuType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MenuType) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_enum_proto_enumTypes[7].Descriptor()
}

func (MenuType) Type() protoreflect.EnumType {
	return &file_protobuf_enum_proto_enumTypes[7]
}

func (x MenuType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MenuType.Descriptor instead.
func (MenuType) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_enum_proto_rawDescGZIP(), []int{7}
}

type MenuState int32

const (
	MenuState_MENU_STATE_UNSPECIFIED MenuState = 0
	MenuState_MENU_STATE_ACTIVE      MenuState = 1
	MenuState_MENU_STATE_INACTIVE    MenuState = 2
	MenuState_MENU_STATE_BANNED      MenuState = 3
)

// Enum value maps for MenuState.
var (
	MenuState_name = map[int32]string{
		0: "MENU_STATE_UNSPECIFIED",
		1: "MENU_STATE_ACTIVE",
		2: "MENU_STATE_INACTIVE",
		3: "MENU_STATE_BANNED",
	}
	MenuState_value = map[string]int32{
		"MENU_STATE_UNSPECIFIED": 0,
		"MENU_STATE_ACTIVE":      1,
		"MENU_STATE_INACTIVE":    2,
		"MENU_STATE_BANNED":      3,
	}
)

func (x MenuState) Enum() *MenuState {
	p := new(MenuState)
	*p = x
	return p
}

func (x MenuState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MenuState) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_enum_proto_enumTypes[8].Descriptor()
}

func (MenuState) Type() protoreflect.EnumType {
	return &file_protobuf_enum_proto_enumTypes[8]
}

func (x MenuState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MenuState.Descriptor instead.
func (MenuState) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_enum_proto_rawDescGZIP(), []int{8}
}

type MenuHidden int32

const (
	MenuHidden_MENU_HIDDEN_UNSPECIFIED MenuHidden = 0
	MenuHidden_MENU_HIDDEN_YES         MenuHidden = 1
	MenuHidden_MENU_HIDDEN_NO          MenuHidden = 2
)

// Enum value maps for MenuHidden.
var (
	MenuHidden_name = map[int32]string{
		0: "MENU_HIDDEN_UNSPECIFIED",
		1: "MENU_HIDDEN_YES",
		2: "MENU_HIDDEN_NO",
	}
	MenuHidden_value = map[string]int32{
		"MENU_HIDDEN_UNSPECIFIED": 0,
		"MENU_HIDDEN_YES":         1,
		"MENU_HIDDEN_NO":          2,
	}
)

func (x MenuHidden) Enum() *MenuHidden {
	p := new(MenuHidden)
	*p = x
	return p
}

func (x MenuHidden) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MenuHidden) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_enum_proto_enumTypes[9].Descriptor()
}

func (MenuHidden) Type() protoreflect.EnumType {
	return &file_protobuf_enum_proto_enumTypes[9]
}

func (x MenuHidden) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MenuHidden.Descriptor instead.
func (MenuHidden) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_enum_proto_rawDescGZIP(), []int{9}
}

type MenuKeepAlive int32

const (
	MenuKeepAlive_MENU_KEEP_ALIVE_UNSPECIFIED MenuKeepAlive = 0
	MenuKeepAlive_MENU_KEEP_ALIVE_YES         MenuKeepAlive = 1
	MenuKeepAlive_MENU_KEEP_ALIVE_NO          MenuKeepAlive = 2
)

// Enum value maps for MenuKeepAlive.
var (
	MenuKeepAlive_name = map[int32]string{
		0: "MENU_KEEP_ALIVE_UNSPECIFIED",
		1: "MENU_KEEP_ALIVE_YES",
		2: "MENU_KEEP_ALIVE_NO",
	}
	MenuKeepAlive_value = map[string]int32{
		"MENU_KEEP_ALIVE_UNSPECIFIED": 0,
		"MENU_KEEP_ALIVE_YES":         1,
		"MENU_KEEP_ALIVE_NO":          2,
	}
)

func (x MenuKeepAlive) Enum() *MenuKeepAlive {
	p := new(MenuKeepAlive)
	*p = x
	return p
}

func (x MenuKeepAlive) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MenuKeepAlive) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_enum_proto_enumTypes[10].Descriptor()
}

func (MenuKeepAlive) Type() protoreflect.EnumType {
	return &file_protobuf_enum_proto_enumTypes[10]
}

func (x MenuKeepAlive) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MenuKeepAlive.Descriptor instead.
func (MenuKeepAlive) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_enum_proto_rawDescGZIP(), []int{10}
}

type MenuBaseMenu int32

const (
	MenuBaseMenu_MENU_BASE_MENU_UNSPECIFIED MenuBaseMenu = 0
	MenuBaseMenu_MENU_BASE_MENU_YES         MenuBaseMenu = 1
	MenuBaseMenu_MENU_BASE_MENU_NO          MenuBaseMenu = 2
)

// Enum value maps for MenuBaseMenu.
var (
	MenuBaseMenu_name = map[int32]string{
		0: "MENU_BASE_MENU_UNSPECIFIED",
		1: "MENU_BASE_MENU_YES",
		2: "MENU_BASE_MENU_NO",
	}
	MenuBaseMenu_value = map[string]int32{
		"MENU_BASE_MENU_UNSPECIFIED": 0,
		"MENU_BASE_MENU_YES":         1,
		"MENU_BASE_MENU_NO":          2,
	}
)

func (x MenuBaseMenu) Enum() *MenuBaseMenu {
	p := new(MenuBaseMenu)
	*p = x
	return p
}

func (x MenuBaseMenu) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MenuBaseMenu) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_enum_proto_enumTypes[11].Descriptor()
}

func (MenuBaseMenu) Type() protoreflect.EnumType {
	return &file_protobuf_enum_proto_enumTypes[11]
}

func (x MenuBaseMenu) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MenuBaseMenu.Descriptor instead.
func (MenuBaseMenu) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_enum_proto_rawDescGZIP(), []int{11}
}

type MenuCloseTab int32

const (
	MenuCloseTab_MENU_CLOSE_TAB_UNSPECIFIED MenuCloseTab = 0
	MenuCloseTab_MENU_CLOSE_TAB_YES         MenuCloseTab = 1
	MenuCloseTab_MENU_CLOSE_TAB_NO          MenuCloseTab = 2
)

// Enum value maps for MenuCloseTab.
var (
	MenuCloseTab_name = map[int32]string{
		0: "MENU_CLOSE_TAB_UNSPECIFIED",
		1: "MENU_CLOSE_TAB_YES",
		2: "MENU_CLOSE_TAB_NO",
	}
	MenuCloseTab_value = map[string]int32{
		"MENU_CLOSE_TAB_UNSPECIFIED": 0,
		"MENU_CLOSE_TAB_YES":         1,
		"MENU_CLOSE_TAB_NO":          2,
	}
)

func (x MenuCloseTab) Enum() *MenuCloseTab {
	p := new(MenuCloseTab)
	*p = x
	return p
}

func (x MenuCloseTab) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MenuCloseTab) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_enum_proto_enumTypes[12].Descriptor()
}

func (MenuCloseTab) Type() protoreflect.EnumType {
	return &file_protobuf_enum_proto_enumTypes[12]
}

func (x MenuCloseTab) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MenuCloseTab.Descriptor instead.
func (MenuCloseTab) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_enum_proto_rawDescGZIP(), []int{12}
}

type MenuParameterType int32

const (
	MenuParameterType_MENU_PARAMETER_TYPE_UNSPECIFIED MenuParameterType = 0
	MenuParameterType_MENU_PARAMETER_TYPE_PARAMS      MenuParameterType = 1
	MenuParameterType_MENU_PARAMETER_TYPE_QUERY       MenuParameterType = 2
)

// Enum value maps for MenuParameterType.
var (
	MenuParameterType_name = map[int32]string{
		0: "MENU_PARAMETER_TYPE_UNSPECIFIED",
		1: "MENU_PARAMETER_TYPE_PARAMS",
		2: "MENU_PARAMETER_TYPE_QUERY",
	}
	MenuParameterType_value = map[string]int32{
		"MENU_PARAMETER_TYPE_UNSPECIFIED": 0,
		"MENU_PARAMETER_TYPE_PARAMS":      1,
		"MENU_PARAMETER_TYPE_QUERY":       2,
	}
)

func (x MenuParameterType) Enum() *MenuParameterType {
	p := new(MenuParameterType)
	*p = x
	return p
}

func (x MenuParameterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MenuParameterType) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_enum_proto_enumTypes[13].Descriptor()
}

func (MenuParameterType) Type() protoreflect.EnumType {
	return &file_protobuf_enum_proto_enumTypes[13]
}

func (x MenuParameterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MenuParameterType.Descriptor instead.
func (MenuParameterType) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_enum_proto_rawDescGZIP(), []int{13}
}

type MenuExtType int32

const (
	MenuExtType_MENU_EXT_TYPE_UNSPECIFIED MenuExtType = 0
	MenuExtType_MENU_EXT_TYPE_NO          MenuExtType = 1
	MenuExtType_MENU_EXT_TYPE_BLANK       MenuExtType = 2
	MenuExtType_MENU_EXT_TYPE_IFRAME      MenuExtType = 3
)

// Enum value maps for MenuExtType.
var (
	MenuExtType_name = map[int32]string{
		0: "MENU_EXT_TYPE_UNSPECIFIED",
		1: "MENU_EXT_TYPE_NO",
		2: "MENU_EXT_TYPE_BLANK",
		3: "MENU_EXT_TYPE_IFRAME",
	}
	MenuExtType_value = map[string]int32{
		"MENU_EXT_TYPE_UNSPECIFIED": 0,
		"MENU_EXT_TYPE_NO":          1,
		"MENU_EXT_TYPE_BLANK":       2,
		"MENU_EXT_TYPE_IFRAME":      3,
	}
)

func (x MenuExtType) Enum() *MenuExtType {
	p := new(MenuExtType)
	*p = x
	return p
}

func (x MenuExtType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MenuExtType) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_enum_proto_enumTypes[14].Descriptor()
}

func (MenuExtType) Type() protoreflect.EnumType {
	return &file_protobuf_enum_proto_enumTypes[14]
}

func (x MenuExtType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MenuExtType.Descriptor instead.
func (MenuExtType) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_enum_proto_rawDescGZIP(), []int{14}
}

type DeptState int32

const (
	DeptState_DEPARTMENT_STATE_UNSPECIFIED DeptState = 0
	DeptState_DEPARTMENT_STATE_ACTIVE      DeptState = 1
	DeptState_DEPARTMENT_STATE_INACTIVE    DeptState = 2
	DeptState_DEPARTMENT_STATE_BANNED      DeptState = 3
)

// Enum value maps for DeptState.
var (
	DeptState_name = map[int32]string{
		0: "DEPARTMENT_STATE_UNSPECIFIED",
		1: "DEPARTMENT_STATE_ACTIVE",
		2: "DEPARTMENT_STATE_INACTIVE",
		3: "DEPARTMENT_STATE_BANNED",
	}
	DeptState_value = map[string]int32{
		"DEPARTMENT_STATE_UNSPECIFIED": 0,
		"DEPARTMENT_STATE_ACTIVE":      1,
		"DEPARTMENT_STATE_INACTIVE":    2,
		"DEPARTMENT_STATE_BANNED":      3,
	}
)

func (x DeptState) Enum() *DeptState {
	p := new(DeptState)
	*p = x
	return p
}

func (x DeptState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeptState) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_enum_proto_enumTypes[15].Descriptor()
}

func (DeptState) Type() protoreflect.EnumType {
	return &file_protobuf_enum_proto_enumTypes[15]
}

func (x DeptState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeptState.Descriptor instead.
func (DeptState) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_enum_proto_rawDescGZIP(), []int{15}
}

type PostState int32

const (
	PostState_POST_STATE_UNSPECIFIED PostState = 0
	PostState_POST_STATE_ACTIVE      PostState = 1
	PostState_POST_STATE_INACTIVE    PostState = 2
	PostState_POST_STATE_BANNED      PostState = 3
)

// Enum value maps for PostState.
var (
	PostState_name = map[int32]string{
		0: "POST_STATE_UNSPECIFIED",
		1: "POST_STATE_ACTIVE",
		2: "POST_STATE_INACTIVE",
		3: "POST_STATE_BANNED",
	}
	PostState_value = map[string]int32{
		"POST_STATE_UNSPECIFIED": 0,
		"POST_STATE_ACTIVE":      1,
		"POST_STATE_INACTIVE":    2,
		"POST_STATE_BANNED":      3,
	}
)

func (x PostState) Enum() *PostState {
	p := new(PostState)
	*p = x
	return p
}

func (x PostState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostState) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_enum_proto_enumTypes[16].Descriptor()
}

func (PostState) Type() protoreflect.EnumType {
	return &file_protobuf_enum_proto_enumTypes[16]
}

func (x PostState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostState.Descriptor instead.
func (PostState) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_enum_proto_rawDescGZIP(), []int{16}
}

var File_protobuf_enum_proto protoreflect.FileDescriptor

var file_protobuf_enum_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2a, 0x39, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x10, 0x53,
	0x4f, 0x52, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x41, 0x53, 0x43, 0x10, 0x02, 0x2a, 0x56,
	0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01,
	0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x45, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x42, 0x41,
	0x4e, 0x4e, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x43, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x4e,
	0x41, 0x42, 0x4c, 0x45, 0x44, 0x5f, 0x59, 0x45, 0x53, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x45,
	0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x5f, 0x4e, 0x4f, 0x10, 0x02, 0x2a, 0x55, 0x0a, 0x0a, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47,
	0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x4e, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x57, 0x4f, 0x4d, 0x41, 0x4e,
	0x10, 0x02, 0x2a, 0x6e, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1a, 0x0a, 0x16, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x44,
	0x10, 0x03, 0x2a, 0x78, 0x0a, 0x0b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1c, 0x0a, 0x18, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x17, 0x0a, 0x13, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x4f, 0x4d, 0x41,
	0x49, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x45, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x6e, 0x0a, 0x09,
	0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x4f, 0x4c,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13,
	0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x69, 0x0a, 0x08,
	0x4d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x45, 0x4e, 0x55,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x43, 0x41, 0x54, 0x41, 0x4c, 0x4f, 0x47, 0x55, 0x45, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e,
	0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x45, 0x4e, 0x55, 0x10, 0x02,
	0x12, 0x15, 0x0a, 0x11, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x42,
	0x49, 0x4c, 0x49, 0x54, 0x59, 0x10, 0x03, 0x2a, 0x6e, 0x0a, 0x09, 0x4d, 0x65, 0x6e, 0x75, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x45, 0x4e, 0x55, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02,
	0x12, 0x15, 0x0a, 0x11, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x42,
	0x41, 0x4e, 0x4e, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x52, 0x0a, 0x0a, 0x4d, 0x65, 0x6e, 0x75, 0x48,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x48, 0x49,
	0x44, 0x44, 0x45, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x48, 0x49, 0x44, 0x44, 0x45,
	0x4e, 0x5f, 0x59, 0x45, 0x53, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x45, 0x4e, 0x55, 0x5f,
	0x48, 0x49, 0x44, 0x44, 0x45, 0x4e, 0x5f, 0x4e, 0x4f, 0x10, 0x02, 0x2a, 0x61, 0x0a, 0x0d, 0x4d,
	0x65, 0x6e, 0x75, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x1f, 0x0a, 0x1b,
	0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x4b, 0x45, 0x45, 0x50, 0x5f, 0x41, 0x4c, 0x49, 0x56, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a,
	0x13, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x4b, 0x45, 0x45, 0x50, 0x5f, 0x41, 0x4c, 0x49, 0x56, 0x45,
	0x5f, 0x59, 0x45, 0x53, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x4b,
	0x45, 0x45, 0x50, 0x5f, 0x41, 0x4c, 0x49, 0x56, 0x45, 0x5f, 0x4e, 0x4f, 0x10, 0x02, 0x2a, 0x5d,
	0x0a, 0x0c, 0x4d, 0x65, 0x6e, 0x75, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1e,
	0x0a, 0x1a, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x4e, 0x55,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16,
	0x0a, 0x12, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x4e, 0x55,
	0x5f, 0x59, 0x45, 0x53, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x42,
	0x41, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x4e, 0x4f, 0x10, 0x02, 0x2a, 0x5d, 0x0a,
	0x0c, 0x4d, 0x65, 0x6e, 0x75, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x61, 0x62, 0x12, 0x1e, 0x0a,
	0x1a, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x54, 0x41, 0x42, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x54, 0x41, 0x42, 0x5f,
	0x59, 0x45, 0x53, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x43, 0x4c,
	0x4f, 0x53, 0x45, 0x5f, 0x54, 0x41, 0x42, 0x5f, 0x4e, 0x4f, 0x10, 0x02, 0x2a, 0x77, 0x0a, 0x11,
	0x4d, 0x65, 0x6e, 0x75, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x23, 0x0a, 0x1f, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45,
	0x54, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x53, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x51, 0x55,
	0x45, 0x52, 0x59, 0x10, 0x02, 0x2a, 0x75, 0x0a, 0x0b, 0x4d, 0x65, 0x6e, 0x75, 0x45, 0x78, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x45, 0x58, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x45, 0x58, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x45, 0x4e,
	0x55, 0x5f, 0x45, 0x58, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4c, 0x41, 0x4e, 0x4b,
	0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x45, 0x58, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x49, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x10, 0x03, 0x2a, 0x86, 0x01, 0x0a,
	0x09, 0x44, 0x65, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x44, 0x45,
	0x50, 0x41, 0x52, 0x54, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17,
	0x44, 0x45, 0x50, 0x41, 0x52, 0x54, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x45, 0x50,
	0x41, 0x52, 0x54, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x45, 0x50, 0x41,
	0x52, 0x54, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x42, 0x41, 0x4e,
	0x4e, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x6e, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x15,
	0x0a, 0x11, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x42, 0x41, 0x4e,
	0x4e, 0x45, 0x44, 0x10, 0x03, 0x42, 0x56, 0x0a, 0x19, 0x64, 0x65, 0x76, 0x2e, 0x62, 0x65, 0x69,
	0x64, 0x75, 0x6f, 0x6b, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x42, 0x09, 0x45, 0x6e, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x65, 0x69, 0x64,
	0x75, 0x6f, 0x6b, 0x65, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x63, 0x61, 0x66, 0x66, 0x6f, 0x6c, 0x64,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobuf_enum_proto_rawDescOnce sync.Once
	file_protobuf_enum_proto_rawDescData = file_protobuf_enum_proto_rawDesc
)

func file_protobuf_enum_proto_rawDescGZIP() []byte {
	file_protobuf_enum_proto_rawDescOnce.Do(func() {
		file_protobuf_enum_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_enum_proto_rawDescData)
	})
	return file_protobuf_enum_proto_rawDescData
}

var file_protobuf_enum_proto_enumTypes = make([]protoimpl.EnumInfo, 17)
var file_protobuf_enum_proto_goTypes = []interface{}{
	(Sort)(0),              // 0: api.protobuf.Sort
	(State)(0),             // 1: api.protobuf.State
	(Enabled)(0),           // 2: api.protobuf.Enabled
	(UserGender)(0),        // 3: api.protobuf.UserGender
	(UserState)(0),         // 4: api.protobuf.UserState
	(DomainState)(0),       // 5: api.protobuf.DomainState
	(RoleState)(0),         // 6: api.protobuf.RoleState
	(MenuType)(0),          // 7: api.protobuf.MenuType
	(MenuState)(0),         // 8: api.protobuf.MenuState
	(MenuHidden)(0),        // 9: api.protobuf.MenuHidden
	(MenuKeepAlive)(0),     // 10: api.protobuf.MenuKeepAlive
	(MenuBaseMenu)(0),      // 11: api.protobuf.MenuBaseMenu
	(MenuCloseTab)(0),      // 12: api.protobuf.MenuCloseTab
	(MenuParameterType)(0), // 13: api.protobuf.MenuParameterType
	(MenuExtType)(0),       // 14: api.protobuf.MenuExtType
	(DeptState)(0),         // 15: api.protobuf.DeptState
	(PostState)(0),         // 16: api.protobuf.PostState
}
var file_protobuf_enum_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protobuf_enum_proto_init() }
func file_protobuf_enum_proto_init() {
	if File_protobuf_enum_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_enum_proto_rawDesc,
			NumEnums:      17,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protobuf_enum_proto_goTypes,
		DependencyIndexes: file_protobuf_enum_proto_depIdxs,
		EnumInfos:         file_protobuf_enum_proto_enumTypes,
	}.Build()
	File_protobuf_enum_proto = out.File
	file_protobuf_enum_proto_rawDesc = nil
	file_protobuf_enum_proto_goTypes = nil
	file_protobuf_enum_proto_depIdxs = nil
}
