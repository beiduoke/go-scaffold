syntax = "proto3";

package admin.interface.v1;


import "gnostic/openapi/v3/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

import "common/pagination/pagination.proto";

import "core/service/v1/user.proto";
import "core/service/v1/role.proto";

option go_package = "github.com/beiduoke/go-scaffold/api/admin/interface/v1;v1";
option java_multiple_files = true;
option java_package = "admin.interface.v1";
option java_outer_classname = "adminProtoV1";

// 用户管理服务
service UserService {
  // 获取用户列表
  rpc ListUser (pagination.PagingRequest) returns (core.service.v1.ListUserResponse) {
    option (google.api.http) = {
      get: "/admin/v1/users"
    };

    option(gnostic.openapi.v3.operation) = {
      security: [{additional_properties: [{name: "OAuth2PasswordBearer"; value: {}}]}]
    };
  }

  // 获取用户数据
  rpc GetUser (core.service.v1.GetUserRequest) returns (core.service.v1.User) {
    option (google.api.http) = {
      get: "/admin/v1/users/{id}"
    };

    option(gnostic.openapi.v3.operation) = {
      security: [{additional_properties: [{name: "OAuth2PasswordBearer"; value: {}}]}]
    };
  }

  // 创建用户
  rpc CreateUser (core.service.v1.CreateUserRequest) returns (core.service.v1.CreateUserResponse) {
    option (google.api.http) = {
      post: "/admin/v1/users"
      body: "user"
    };

    option(gnostic.openapi.v3.operation) = {
      security: [{additional_properties: [{name: "OAuth2PasswordBearer"; value: {}}]}]
    };
  }

  // 更新用户
  rpc UpdateUser (core.service.v1.UpdateUserRequest) returns (core.service.v1.UpdateUserResponse) {
    option (google.api.http) = {
      put: "/admin/v1/users/{id}"
      body: "user"
    };

    option(gnostic.openapi.v3.operation) = {
      security: [{additional_properties: [{name: "OAuth2PasswordBearer"; value: {}}]}]
    };
  }

  // 删除用户
  rpc DeleteUser (core.service.v1.DeleteUserRequest) returns (core.service.v1.DeleteUserResponse) {
    option (google.api.http) = {
      delete: "/admin/v1/users/{id}"
    };

    option(gnostic.openapi.v3.operation) = {
      security: [{additional_properties: [{name: "OAuth2PasswordBearer"; value: {}}]}]
    };
  }
}
