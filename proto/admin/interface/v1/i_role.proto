syntax = "proto3";

package admin.interface.v1;


import "gnostic/openapi/v3/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

import "common/pagination/pagination.proto";

import "core/service/v1/user.proto";
import "core/service/v1/role.proto";

option go_package = "github.com/beiduoke/go-scaffold/api/admin/interface/v1;v1";

// 角色管理服务
service RoleService {
  // 获取角色列表
  rpc ListRole (pagination.PagingRequest) returns (core.service.v1.ListRoleResponse) {
    option (google.api.http) = {
      get: "/admin/v1/roles"
    };

    option(gnostic.openapi.v3.operation) = {
      security: [{additional_properties: [{name: "OAuth2PasswordBearer"; value: {}}]}]
    };
  }

  // 获取角色数据
  rpc GetRole (core.service.v1.GetRoleRequest) returns (core.service.v1.Role) {
    option (google.api.http) = {
      get: "/admin/v1/roles/{id}"
    };

    option(gnostic.openapi.v3.operation) = {
      security: [{additional_properties: [{name: "OAuth2PasswordBearer"; value: {}}]}]
    };
  }

  // 创建角色
  rpc CreateRole (core.service.v1.CreateRoleRequest) returns (core.service.v1.CreateRoleResponse) {
    option (google.api.http) = {
      post: "/admin/v1/roles"
      body: "user"
    };

    option(gnostic.openapi.v3.operation) = {
      security: [{additional_properties: [{name: "OAuth2PasswordBearer"; value: {}}]}]
    };
  }

  // 更新角色
  rpc UpdateRole (core.service.v1.UpdateRoleRequest) returns (core.service.v1.UpdateRoleResponse) {
    option (google.api.http) = {
      put: "/admin/v1/roles/{id}"
      body: "user"
    };

    option(gnostic.openapi.v3.operation) = {
      security: [{additional_properties: [{name: "OAuth2PasswordBearer"; value: {}}]}]
    };
  }

  // 删除角色
  rpc DeleteRole (core.service.v1.DeleteRoleRequest) returns (core.service.v1.DeleteRoleResponse) {
    option (google.api.http) = {
      delete: "/admin/v1/roles/{id}"
    };

    option(gnostic.openapi.v3.operation) = {
      security: [{additional_properties: [{name: "OAuth2PasswordBearer"; value: {}}]}]
    };
  }
}
