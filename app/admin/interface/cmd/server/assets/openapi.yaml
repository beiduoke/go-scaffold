# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Scaffold SAAS Auth API
    description: 后台管理脚手架系统-认证服务
    contact:
        name: SAAS架构
        url: https://github.com/grpc-ecosystem/grpc-gateway
        email: none@example.com
    license:
        name: BSD 3-Clause License
        url: https://github.com/grpc-ecosystem/grpc-gateway/blob/master/LICENSE.txt
    version: "1.0"
paths:
    /admin/v1/depts:
        get:
            tags:
                - DeptService
            description: 获取部门列表
            operationId: DeptService_ListDept
            parameters:
                - name: page
                  in: query
                  description: 当前页码
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每页的行数
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  description: 与过滤参数
                  schema:
                    type: string
                - name: or
                  in: query
                  description: 或过滤参数
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: 排序条件
                  schema:
                    type: array
                    items:
                        type: string
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
                - name: fieldMask
                  in: query
                  description: 字段掩码
                  schema:
                    type: string
                    format: field-mask
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeptResponse'
            security:
                - OAuth2PasswordBearer: []
        post:
            tags:
                - DeptService
            description: 创建部门
            operationId: DeptService_CreateDept
            parameters:
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Dept'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateDeptResponse'
            security:
                - OAuth2PasswordBearer: []
    /admin/v1/depts/{id}:
        get:
            tags:
                - DeptService
            description: 获取部门数据
            operationId: DeptService_GetDept
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Dept'
            security:
                - OAuth2PasswordBearer: []
        put:
            tags:
                - DeptService
            description: 更新部门
            operationId: DeptService_UpdateDept
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Dept'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateDeptResponse'
            security:
                - OAuth2PasswordBearer: []
        delete:
            tags:
                - DeptService
            description: 删除部门
            operationId: DeptService_DeleteDept
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteDeptResponse'
            security:
                - OAuth2PasswordBearer: []
    /admin/v1/login:
        post:
            tags:
                - AuthService
            description: 后台登陆
            operationId: AuthService_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResponse'
    /admin/v1/logout:
        post:
            tags:
                - AuthService
            description: 后台登出
            operationId: AuthService_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LogoutRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LogoutResponse'
            security:
                - OAuth2PasswordBearer: []
    /admin/v1/menus:
        get:
            tags:
                - MenuService
            description: 获取菜单列表
            operationId: MenuService_ListMenu
            parameters:
                - name: page
                  in: query
                  description: 当前页码
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每页的行数
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  description: 与过滤参数
                  schema:
                    type: string
                - name: or
                  in: query
                  description: 或过滤参数
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: 排序条件
                  schema:
                    type: array
                    items:
                        type: string
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
                - name: fieldMask
                  in: query
                  description: 字段掩码
                  schema:
                    type: string
                    format: field-mask
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMenuResponse'
            security:
                - OAuth2PasswordBearer: []
        post:
            tags:
                - MenuService
            description: 创建菜单
            operationId: MenuService_CreateMenu
            parameters:
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Menu'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateMenuResponse'
            security:
                - OAuth2PasswordBearer: []
    /admin/v1/menus/{id}:
        get:
            tags:
                - MenuService
            description: 获取菜单数据
            operationId: MenuService_GetMenu
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Menu'
            security:
                - OAuth2PasswordBearer: []
        put:
            tags:
                - MenuService
            description: 更新菜单
            operationId: MenuService_UpdateMenu
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Menu'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateMenuResponse'
            security:
                - OAuth2PasswordBearer: []
        delete:
            tags:
                - MenuService
            description: 删除菜单
            operationId: MenuService_DeleteMenu
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteMenuResponse'
            security:
                - OAuth2PasswordBearer: []
    /admin/v1/posts:
        get:
            tags:
                - PostService
            description: 获取岗位列表
            operationId: PostService_ListPost
            parameters:
                - name: page
                  in: query
                  description: 当前页码
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每页的行数
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  description: 与过滤参数
                  schema:
                    type: string
                - name: or
                  in: query
                  description: 或过滤参数
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: 排序条件
                  schema:
                    type: array
                    items:
                        type: string
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
                - name: fieldMask
                  in: query
                  description: 字段掩码
                  schema:
                    type: string
                    format: field-mask
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListPostResponse'
            security:
                - OAuth2PasswordBearer: []
        post:
            tags:
                - PostService
            description: 创建岗位
            operationId: PostService_CreatePost
            parameters:
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Post'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreatePostResponse'
            security:
                - OAuth2PasswordBearer: []
    /admin/v1/posts/{id}:
        get:
            tags:
                - PostService
            description: 获取岗位数据
            operationId: PostService_GetPost
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Post'
            security:
                - OAuth2PasswordBearer: []
        put:
            tags:
                - PostService
            description: 更新岗位
            operationId: PostService_UpdatePost
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Post'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdatePostResponse'
            security:
                - OAuth2PasswordBearer: []
        delete:
            tags:
                - PostService
            description: 删除岗位
            operationId: PostService_DeletePost
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeletePostResponse'
            security:
                - OAuth2PasswordBearer: []
    /admin/v1/register:
        post:
            tags:
                - AuthService
            description: 注册
            operationId: AuthService_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterResponse'
    /admin/v1/roles:
        get:
            tags:
                - RoleService
            description: 获取角色列表
            operationId: RoleService_ListRole
            parameters:
                - name: page
                  in: query
                  description: 当前页码
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每页的行数
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  description: 与过滤参数
                  schema:
                    type: string
                - name: or
                  in: query
                  description: 或过滤参数
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: 排序条件
                  schema:
                    type: array
                    items:
                        type: string
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
                - name: fieldMask
                  in: query
                  description: 字段掩码
                  schema:
                    type: string
                    format: field-mask
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRoleResponse'
            security:
                - OAuth2PasswordBearer: []
        post:
            tags:
                - RoleService
            description: 创建角色
            operationId: RoleService_CreateRole
            parameters:
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Role'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateRoleResponse'
            security:
                - OAuth2PasswordBearer: []
    /admin/v1/roles/{id}:
        get:
            tags:
                - RoleService
            description: 获取角色数据
            operationId: RoleService_GetRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Role'
            security:
                - OAuth2PasswordBearer: []
        put:
            tags:
                - RoleService
            description: 更新角色
            operationId: RoleService_UpdateRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Role'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateRoleResponse'
            security:
                - OAuth2PasswordBearer: []
        delete:
            tags:
                - RoleService
            description: 删除角色
            operationId: RoleService_DeleteRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteRoleResponse'
            security:
                - OAuth2PasswordBearer: []
    /admin/v1/users:
        get:
            tags:
                - UserService
            description: 获取用户列表
            operationId: UserService_ListUser
            parameters:
                - name: page
                  in: query
                  description: 当前页码
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每页的行数
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  description: 与过滤参数
                  schema:
                    type: string
                - name: or
                  in: query
                  description: 或过滤参数
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: 排序条件
                  schema:
                    type: array
                    items:
                        type: string
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
                - name: fieldMask
                  in: query
                  description: 字段掩码
                  schema:
                    type: string
                    format: field-mask
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserResponse'
            security:
                - OAuth2PasswordBearer: []
        post:
            tags:
                - UserService
            description: 创建用户
            operationId: UserService_CreateUser
            parameters:
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserResponse'
            security:
                - OAuth2PasswordBearer: []
    /admin/v1/users/{id}:
        get:
            tags:
                - UserService
            description: 获取用户数据
            operationId: UserService_GetUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
            security:
                - OAuth2PasswordBearer: []
        put:
            tags:
                - UserService
            description: 更新用户
            operationId: UserService_UpdateUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserResponse'
            security:
                - OAuth2PasswordBearer: []
        delete:
            tags:
                - UserService
            description: 删除用户
            operationId: UserService_DeleteUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserResponse'
            security:
                - OAuth2PasswordBearer: []
components:
    schemas:
        CreateDeptResponse:
            type: object
            properties: {}
        CreateMenuResponse:
            type: object
            properties: {}
        CreatePostResponse:
            type: object
            properties: {}
        CreateRoleResponse:
            type: object
            properties: {}
        CreateUserResponse:
            type: object
            properties: {}
        DeleteDeptResponse:
            type: object
            properties: {}
        DeleteMenuResponse:
            type: object
            properties: {}
        DeletePostResponse:
            type: object
            properties: {}
        DeleteRoleResponse:
            type: object
            properties: {}
        DeleteUserResponse:
            type: object
            properties: {}
        Dept:
            type: object
            properties:
                createdAt:
                    type: string
                updatedAt:
                    type: string
                id:
                    type: integer
                    format: uint32
                name:
                    type: string
                sort:
                    type: integer
                    format: int32
                state:
                    type: integer
                    description: 状态 1 激活 2 未激活 3 禁用
                    format: int32
                remark:
                    type: string
                parentId:
                    type: integer
                    format: uint32
                leaderId:
                    type: integer
                    format: uint32
            description: 部门模块
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListDeptResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/Dept'
                total:
                    type: integer
                    format: int32
        ListMenuResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/Menu'
                total:
                    type: integer
                    format: int32
        ListPostResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/Post'
                total:
                    type: integer
                    format: int32
        ListRoleResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/Role'
                total:
                    type: integer
                    format: int32
        ListUserResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
                total:
                    type: integer
                    format: int32
        LoginRequest:
            type: object
            properties:
                name:
                    type: string
                password:
                    type: string
                grandType:
                    type: integer
                    format: int32
            description: 用户后台登陆 - 请求
        LoginResponse:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                name:
                    type: string
                tokenType:
                    type: string
                accessToken:
                    type: string
                refreshToken:
                    type: string
            description: 用户后台登陆 - 回应
        LogoutRequest:
            type: object
            properties: {}
            description: 用户后台登出 - 请求
        LogoutResponse:
            type: object
            properties: {}
            description: 用户后台登出 - 回应
        Menu:
            type: object
            properties:
                createdAt:
                    type: string
                updatedAt:
                    type: string
                id:
                    type: integer
                    format: uint32
                name:
                    type: string
                sort:
                    type: integer
                    format: int32
                state:
                    type: integer
                    description: 状态 1 激活 2 未激活 3 禁用
                    format: int32
                remark:
                    type: string
                parentId:
                    type: integer
                    format: uint32
                title:
                    type: string
                type:
                    type: integer
                    format: int32
                path:
                    type: string
                component:
                    type: string
                icon:
                    type: string
                isExt:
                    type: boolean
                extUrl:
                    type: string
                permissions:
                    type: string
                redirect:
                    type: string
                currentActiveMenu:
                    type: string
                keepAlive:
                    type: boolean
                visible:
                    type: boolean
                hideTab:
                    type: boolean
                hideMenu:
                    type: boolean
                hideBreadcrumb:
                    type: boolean
            description: 菜单模块
        Post:
            type: object
            properties:
                createdAt:
                    type: string
                updatedAt:
                    type: string
                id:
                    type: integer
                    format: uint32
                state:
                    type: integer
                    description: 状态 1 激活 2 未激活 3 禁用
                    format: int32
                remark:
                    type: string
                sort:
                    type: integer
                    format: int32
                name:
                    type: string
            description: 岗位模块
        RegisterRequest:
            type: object
            properties:
                auth:
                    allOf:
                        - $ref: '#/components/schemas/RegisterRequest_Auth'
                    description: 请求体
                domain:
                    type: string
            description: 注册 - 请求
        RegisterRequest_Auth:
            type: object
            properties:
                name:
                    type: string
                    description: 用户名
                password:
                    type: string
                    description: 密码
                phone:
                    type: string
                    description: 电话
                grandType:
                    type: integer
                    description: 授权类型，一直为：password
                    format: int32
        RegisterResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                result:
                    $ref: '#/components/schemas/GoogleProtobufAny'
                type:
                    type: string
            description: 注册 - 回应
        Role:
            type: object
            properties:
                createdAt:
                    type: string
                updatedAt:
                    type: string
                id:
                    type: integer
                    format: uint32
                state:
                    type: integer
                    default: !!float 1
                    description: 状态 1 激活 2 未激活 3 禁用
                    format: int32
                sort:
                    type: integer
                    format: int32
                remark:
                    type: string
                name:
                    type: string
                defaultRouter:
                    type: string
                menuCheckStrictly:
                    type: integer
                    default: !!float 1
                    description: 菜单树选择项是否关联显示
                    format: int32
                deptCheckStrictly:
                    type: integer
                    default: !!float 1
                    description: 部门树选择项是否关联显示
                    format: int32
                dataScope:
                    type: integer
                    format: int32
            description: 角色模块
        UpdateDeptResponse:
            type: object
            properties: {}
        UpdateMenuResponse:
            type: object
            properties: {}
        UpdatePostResponse:
            type: object
            properties: {}
        UpdateRoleResponse:
            type: object
            properties: {}
        UpdateUserResponse:
            type: object
            properties: {}
        User:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                name:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                birthday:
                    type: string
                gender:
                    type: integer
                    format: int32
                phone:
                    type: string
                email:
                    type: string
                avatar:
                    type: string
                state:
                    type: integer
                    description: 状态 1 激活 2 未激活 3 禁用
                    format: int32
                createdAt:
                    type: string
                updatedAt:
                    type: string
                creatorId:
                    type: integer
                    description: 创建者ID
                    format: uint32
                authority:
                    type: integer
                    description: 权限
                    format: int32
                password:
                    type: string
                description:
                    type: string
tags:
    - name: AuthService
      description: The greeting service definition.
    - name: DeptService
      description: 部门管理服务
    - name: MenuService
      description: 菜单管理服务
    - name: PostService
      description: 岗位管理服务
    - name: RoleService
      description: 角色管理服务
    - name: UserService
      description: 用户管理服务
