// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: admin/v1/role.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/google/gnostic/openapiv3"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	_ "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 角色模块
type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
	Id                uint64                 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Name              string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	ParentId          uint64                 `protobuf:"varint,5,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	DefaultRouter     *string                `protobuf:"bytes,6,opt,name=default_router,json=defaultRouter,proto3,oneof" json:"default_router,omitempty"`
	Sort              *int32                 `protobuf:"varint,7,opt,name=sort,proto3,oneof" json:"sort,omitempty"`
	DataScope         *int32                 `protobuf:"varint,8,opt,name=data_scope,json=dataScope,proto3,oneof" json:"data_scope,omitempty"`
	MenuCheckStrictly *int32                 `protobuf:"varint,9,opt,name=menu_check_strictly,json=menuCheckStrictly,proto3,oneof" json:"menu_check_strictly,omitempty"`
	DeptCheckStrictly *int32                 `protobuf:"varint,10,opt,name=dept_check_strictly,json=deptCheckStrictly,proto3,oneof" json:"dept_check_strictly,omitempty"`
	State             *int32                 `protobuf:"varint,11,opt,name=state,proto3,oneof" json:"state,omitempty"`
	Remarks           *string                `protobuf:"bytes,12,opt,name=remarks,proto3,oneof" json:"remarks,omitempty"`
	MenuIds           []uint64               `protobuf:"varint,13,rep,packed,name=menu_ids,json=menuIds,proto3" json:"menu_ids,omitempty"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{0}
}

func (x *Role) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Role) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Role) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *Role) GetDefaultRouter() string {
	if x != nil && x.DefaultRouter != nil {
		return *x.DefaultRouter
	}
	return ""
}

func (x *Role) GetSort() int32 {
	if x != nil && x.Sort != nil {
		return *x.Sort
	}
	return 0
}

func (x *Role) GetDataScope() int32 {
	if x != nil && x.DataScope != nil {
		return *x.DataScope
	}
	return 0
}

func (x *Role) GetMenuCheckStrictly() int32 {
	if x != nil && x.MenuCheckStrictly != nil {
		return *x.MenuCheckStrictly
	}
	return 0
}

func (x *Role) GetDeptCheckStrictly() int32 {
	if x != nil && x.DeptCheckStrictly != nil {
		return *x.DeptCheckStrictly
	}
	return 0
}

func (x *Role) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *Role) GetRemarks() string {
	if x != nil && x.Remarks != nil {
		return *x.Remarks
	}
	return ""
}

func (x *Role) GetMenuIds() []uint64 {
	if x != nil {
		return x.MenuIds
	}
	return nil
}

// 请求 - 列表角色
type ListRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否不分页
	Nopaging *bool `protobuf:"varint,1,opt,name=nopaging,proto3,oneof" json:"nopaging,omitempty"`
	// 当前页
	Page *int32 `protobuf:"varint,2,opt,name=page,proto3,oneof" json:"page,omitempty"`
	// 每一页的行数
	PageSize *int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
}

func (x *ListRoleRequest) Reset() {
	*x = ListRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleRequest) ProtoMessage() {}

func (x *ListRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleRequest.ProtoReflect.Descriptor instead.
func (*ListRoleRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{1}
}

func (x *ListRoleRequest) GetNopaging() bool {
	if x != nil && x.Nopaging != nil {
		return *x.Nopaging
	}
	return false
}

func (x *ListRoleRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListRoleRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

// 回应 - 列表角色
type ListRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*Role `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListRoleResponse) Reset() {
	*x = ListRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleResponse) ProtoMessage() {}

func (x *ListRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleResponse.ProtoReflect.Descriptor instead.
func (*ListRoleResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{2}
}

func (x *ListRoleResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListRoleResponse) GetItems() []*Role {
	if x != nil {
		return x.Items
	}
	return nil
}

// 请求 - 创建角色
type CreateRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ParentId          uint64   `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	DefaultRouter     *string  `protobuf:"bytes,3,opt,name=default_router,json=defaultRouter,proto3,oneof" json:"default_router,omitempty"`
	Sort              *int32   `protobuf:"varint,4,opt,name=sort,proto3,oneof" json:"sort,omitempty"`
	DataScope         *int32   `protobuf:"varint,5,opt,name=data_scope,json=dataScope,proto3,oneof" json:"data_scope,omitempty"`
	MenuCheckStrictly *int32   `protobuf:"varint,6,opt,name=menu_check_strictly,json=menuCheckStrictly,proto3,oneof" json:"menu_check_strictly,omitempty"`
	DeptCheckStrictly *int32   `protobuf:"varint,7,opt,name=dept_check_strictly,json=deptCheckStrictly,proto3,oneof" json:"dept_check_strictly,omitempty"`
	State             int32    `protobuf:"varint,8,opt,name=state,proto3" json:"state,omitempty"`
	Remarks           *string  `protobuf:"bytes,9,opt,name=remarks,proto3,oneof" json:"remarks,omitempty"`
	MenuIds           []uint64 `protobuf:"varint,10,rep,packed,name=menu_ids,json=menuIds,proto3" json:"menu_ids,omitempty"`
}

func (x *CreateRoleRequest) Reset() {
	*x = CreateRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleRequest) ProtoMessage() {}

func (x *CreateRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleRequest.ProtoReflect.Descriptor instead.
func (*CreateRoleRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRoleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRoleRequest) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *CreateRoleRequest) GetDefaultRouter() string {
	if x != nil && x.DefaultRouter != nil {
		return *x.DefaultRouter
	}
	return ""
}

func (x *CreateRoleRequest) GetSort() int32 {
	if x != nil && x.Sort != nil {
		return *x.Sort
	}
	return 0
}

func (x *CreateRoleRequest) GetDataScope() int32 {
	if x != nil && x.DataScope != nil {
		return *x.DataScope
	}
	return 0
}

func (x *CreateRoleRequest) GetMenuCheckStrictly() int32 {
	if x != nil && x.MenuCheckStrictly != nil {
		return *x.MenuCheckStrictly
	}
	return 0
}

func (x *CreateRoleRequest) GetDeptCheckStrictly() int32 {
	if x != nil && x.DeptCheckStrictly != nil {
		return *x.DeptCheckStrictly
	}
	return 0
}

func (x *CreateRoleRequest) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *CreateRoleRequest) GetRemarks() string {
	if x != nil && x.Remarks != nil {
		return *x.Remarks
	}
	return ""
}

func (x *CreateRoleRequest) GetMenuIds() []uint64 {
	if x != nil {
		return x.MenuIds
	}
	return nil
}

// 回应 - 创建角色
type CreateRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result  *anypb.Any `protobuf:"bytes,3,opt,name=result,proto3,oneof" json:"result,omitempty"`
	Type    string     `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *CreateRoleResponse) Reset() {
	*x = CreateRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleResponse) ProtoMessage() {}

func (x *CreateRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleResponse.ProtoReflect.Descriptor instead.
func (*CreateRoleResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRoleResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateRoleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateRoleResponse) GetResult() *anypb.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CreateRoleResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// 请求 - 修改角色
type UpdateRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data *UpdateRoleRequest_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateRoleRequest) Reset() {
	*x = UpdateRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleRequest) ProtoMessage() {}

func (x *UpdateRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateRoleRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateRoleRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRoleRequest) GetData() *UpdateRoleRequest_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// 回应 - 创建角色
type UpdateRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result  *anypb.Any `protobuf:"bytes,3,opt,name=result,proto3,oneof" json:"result,omitempty"`
	Type    string     `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *UpdateRoleResponse) Reset() {
	*x = UpdateRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleResponse) ProtoMessage() {}

func (x *UpdateRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleResponse.ProtoReflect.Descriptor instead.
func (*UpdateRoleResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateRoleResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateRoleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateRoleResponse) GetResult() *anypb.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UpdateRoleResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// 请求 - 修改角色
type UpdateRoleStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data *UpdateRoleStateRequest_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateRoleStateRequest) Reset() {
	*x = UpdateRoleStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleStateRequest) ProtoMessage() {}

func (x *UpdateRoleStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleStateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRoleStateRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateRoleStateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRoleStateRequest) GetData() *UpdateRoleStateRequest_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// 回应 - 创建角色
type UpdateRoleStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result  *anypb.Any `protobuf:"bytes,3,opt,name=result,proto3,oneof" json:"result,omitempty"`
	Type    string     `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *UpdateRoleStateResponse) Reset() {
	*x = UpdateRoleStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleStateResponse) ProtoMessage() {}

func (x *UpdateRoleStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleStateResponse.ProtoReflect.Descriptor instead.
func (*UpdateRoleStateResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateRoleStateResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateRoleStateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateRoleStateResponse) GetResult() *anypb.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UpdateRoleStateResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// 请求 - 获取角色
type GetRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetRoleRequest) Reset() {
	*x = GetRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleRequest) ProtoMessage() {}

func (x *GetRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleRequest.ProtoReflect.Descriptor instead.
func (*GetRoleRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{9}
}

func (x *GetRoleRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 请求 - 删除角色
type DeleteRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRoleRequest) Reset() {
	*x = DeleteRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleRequest) ProtoMessage() {}

func (x *DeleteRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleRequest.ProtoReflect.Descriptor instead.
func (*DeleteRoleRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteRoleRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 回应 - 删除角色
type DeleteRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result  *anypb.Any `protobuf:"bytes,3,opt,name=result,proto3,oneof" json:"result,omitempty"`
	Type    string     `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *DeleteRoleResponse) Reset() {
	*x = DeleteRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleResponse) ProtoMessage() {}

func (x *DeleteRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleResponse.ProtoReflect.Descriptor instead.
func (*DeleteRoleResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteRoleResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteRoleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteRoleResponse) GetResult() *anypb.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DeleteRoleResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// 请求 - 获取角色菜单
type ListRoleMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ListRoleMenuRequest) Reset() {
	*x = ListRoleMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoleMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleMenuRequest) ProtoMessage() {}

func (x *ListRoleMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleMenuRequest.ProtoReflect.Descriptor instead.
func (*ListRoleMenuRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{12}
}

func (x *ListRoleMenuRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 回应 - 获取角色菜单
type ListRoleMenuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Menu `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total *int64  `protobuf:"varint,2,opt,name=total,proto3,oneof" json:"total,omitempty"`
}

func (x *ListRoleMenuResponse) Reset() {
	*x = ListRoleMenuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoleMenuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleMenuResponse) ProtoMessage() {}

func (x *ListRoleMenuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleMenuResponse.ProtoReflect.Descriptor instead.
func (*ListRoleMenuResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{13}
}

func (x *ListRoleMenuResponse) GetItems() []*Menu {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListRoleMenuResponse) GetTotal() int64 {
	if x != nil && x.Total != nil {
		return *x.Total
	}
	return 0
}

// 请求 - 处理角色菜单
type HandleRoleMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64                      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data *HandleRoleMenuRequest_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *HandleRoleMenuRequest) Reset() {
	*x = HandleRoleMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleRoleMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleRoleMenuRequest) ProtoMessage() {}

func (x *HandleRoleMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleRoleMenuRequest.ProtoReflect.Descriptor instead.
func (*HandleRoleMenuRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{14}
}

func (x *HandleRoleMenuRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HandleRoleMenuRequest) GetData() *HandleRoleMenuRequest_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// 回应 - 处理角色菜单
type HandleRoleMenuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result  *anypb.Any `protobuf:"bytes,3,opt,name=result,proto3,oneof" json:"result,omitempty"`
	Type    string     `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *HandleRoleMenuResponse) Reset() {
	*x = HandleRoleMenuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleRoleMenuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleRoleMenuResponse) ProtoMessage() {}

func (x *HandleRoleMenuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleRoleMenuResponse.ProtoReflect.Descriptor instead.
func (*HandleRoleMenuResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{15}
}

func (x *HandleRoleMenuResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *HandleRoleMenuResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HandleRoleMenuResponse) GetResult() *anypb.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *HandleRoleMenuResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// 请求 - 获取角色菜单
type ListRoleDeptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ListRoleDeptRequest) Reset() {
	*x = ListRoleDeptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoleDeptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleDeptRequest) ProtoMessage() {}

func (x *ListRoleDeptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleDeptRequest.ProtoReflect.Descriptor instead.
func (*ListRoleDeptRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{16}
}

func (x *ListRoleDeptRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 回应 - 获取角色菜单（未使用）
type ListRoleDeptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total *int64  `protobuf:"varint,1,opt,name=total,proto3,oneof" json:"total,omitempty"`
	Items []*Dept `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListRoleDeptResponse) Reset() {
	*x = ListRoleDeptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoleDeptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleDeptResponse) ProtoMessage() {}

func (x *ListRoleDeptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleDeptResponse.ProtoReflect.Descriptor instead.
func (*ListRoleDeptResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{17}
}

func (x *ListRoleDeptResponse) GetTotal() int64 {
	if x != nil && x.Total != nil {
		return *x.Total
	}
	return 0
}

func (x *ListRoleDeptResponse) GetItems() []*Dept {
	if x != nil {
		return x.Items
	}
	return nil
}

// 请求 - 获取角色数据权限
type GetRoleDataScopeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetRoleDataScopeRequest) Reset() {
	*x = GetRoleDataScopeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleDataScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleDataScopeRequest) ProtoMessage() {}

func (x *GetRoleDataScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleDataScopeRequest.ProtoReflect.Descriptor instead.
func (*GetRoleDataScopeRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{18}
}

func (x *GetRoleDataScopeRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 回应 - 角色菜单数据范围
type GetRoleDataScopeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope             int32    `protobuf:"varint,1,opt,name=scope,proto3" json:"scope,omitempty"`
	DeptCheckStrictly *int32   `protobuf:"varint,2,opt,name=dept_check_strictly,json=deptCheckStrictly,proto3,oneof" json:"dept_check_strictly,omitempty"`
	DeptCustoms       []uint64 `protobuf:"varint,3,rep,packed,name=dept_customs,json=deptCustoms,proto3" json:"dept_customs,omitempty"`
}

func (x *GetRoleDataScopeResponse) Reset() {
	*x = GetRoleDataScopeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleDataScopeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleDataScopeResponse) ProtoMessage() {}

func (x *GetRoleDataScopeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleDataScopeResponse.ProtoReflect.Descriptor instead.
func (*GetRoleDataScopeResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{19}
}

func (x *GetRoleDataScopeResponse) GetScope() int32 {
	if x != nil {
		return x.Scope
	}
	return 0
}

func (x *GetRoleDataScopeResponse) GetDeptCheckStrictly() int32 {
	if x != nil && x.DeptCheckStrictly != nil {
		return *x.DeptCheckStrictly
	}
	return 0
}

func (x *GetRoleDataScopeResponse) GetDeptCustoms() []uint64 {
	if x != nil {
		return x.DeptCustoms
	}
	return nil
}

// 请求 - 处理角色数据范围
type HandleRoleDataScopeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64                                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data *HandleRoleDataScopeRequest_DataScope `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *HandleRoleDataScopeRequest) Reset() {
	*x = HandleRoleDataScopeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleRoleDataScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleRoleDataScopeRequest) ProtoMessage() {}

func (x *HandleRoleDataScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleRoleDataScopeRequest.ProtoReflect.Descriptor instead.
func (*HandleRoleDataScopeRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{20}
}

func (x *HandleRoleDataScopeRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HandleRoleDataScopeRequest) GetData() *HandleRoleDataScopeRequest_DataScope {
	if x != nil {
		return x.Data
	}
	return nil
}

// 回应 - 处理角色数据
type HandleRoleDataScopeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result  *anypb.Any `protobuf:"bytes,3,opt,name=result,proto3,oneof" json:"result,omitempty"`
	Type    string     `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *HandleRoleDataScopeResponse) Reset() {
	*x = HandleRoleDataScopeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleRoleDataScopeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleRoleDataScopeResponse) ProtoMessage() {}

func (x *HandleRoleDataScopeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleRoleDataScopeResponse.ProtoReflect.Descriptor instead.
func (*HandleRoleDataScopeResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{21}
}

func (x *HandleRoleDataScopeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *HandleRoleDataScopeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HandleRoleDataScopeResponse) GetResult() *anypb.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *HandleRoleDataScopeResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type UpdateRoleRequest_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ParentId          uint64   `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	DefaultRouter     *string  `protobuf:"bytes,3,opt,name=default_router,json=defaultRouter,proto3,oneof" json:"default_router,omitempty"`
	Sort              *int32   `protobuf:"varint,4,opt,name=sort,proto3,oneof" json:"sort,omitempty"`
	DataScope         *int32   `protobuf:"varint,5,opt,name=data_scope,json=dataScope,proto3,oneof" json:"data_scope,omitempty"`
	MenuCheckStrictly *int32   `protobuf:"varint,6,opt,name=menu_check_strictly,json=menuCheckStrictly,proto3,oneof" json:"menu_check_strictly,omitempty"`
	DeptCheckStrictly *int32   `protobuf:"varint,7,opt,name=dept_check_strictly,json=deptCheckStrictly,proto3,oneof" json:"dept_check_strictly,omitempty"`
	State             int32    `protobuf:"varint,8,opt,name=state,proto3" json:"state,omitempty"`
	Remarks           *string  `protobuf:"bytes,9,opt,name=remarks,proto3,oneof" json:"remarks,omitempty"`
	MenuIds           []uint64 `protobuf:"varint,10,rep,packed,name=menu_ids,json=menuIds,proto3" json:"menu_ids,omitempty"`
}

func (x *UpdateRoleRequest_Data) Reset() {
	*x = UpdateRoleRequest_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleRequest_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleRequest_Data) ProtoMessage() {}

func (x *UpdateRoleRequest_Data) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleRequest_Data.ProtoReflect.Descriptor instead.
func (*UpdateRoleRequest_Data) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{5, 0}
}

func (x *UpdateRoleRequest_Data) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRoleRequest_Data) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *UpdateRoleRequest_Data) GetDefaultRouter() string {
	if x != nil && x.DefaultRouter != nil {
		return *x.DefaultRouter
	}
	return ""
}

func (x *UpdateRoleRequest_Data) GetSort() int32 {
	if x != nil && x.Sort != nil {
		return *x.Sort
	}
	return 0
}

func (x *UpdateRoleRequest_Data) GetDataScope() int32 {
	if x != nil && x.DataScope != nil {
		return *x.DataScope
	}
	return 0
}

func (x *UpdateRoleRequest_Data) GetMenuCheckStrictly() int32 {
	if x != nil && x.MenuCheckStrictly != nil {
		return *x.MenuCheckStrictly
	}
	return 0
}

func (x *UpdateRoleRequest_Data) GetDeptCheckStrictly() int32 {
	if x != nil && x.DeptCheckStrictly != nil {
		return *x.DeptCheckStrictly
	}
	return 0
}

func (x *UpdateRoleRequest_Data) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *UpdateRoleRequest_Data) GetRemarks() string {
	if x != nil && x.Remarks != nil {
		return *x.Remarks
	}
	return ""
}

func (x *UpdateRoleRequest_Data) GetMenuIds() []uint64 {
	if x != nil {
		return x.MenuIds
	}
	return nil
}

type UpdateRoleStateRequest_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State int32 `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *UpdateRoleStateRequest_Data) Reset() {
	*x = UpdateRoleStateRequest_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleStateRequest_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleStateRequest_Data) ProtoMessage() {}

func (x *UpdateRoleStateRequest_Data) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleStateRequest_Data.ProtoReflect.Descriptor instead.
func (*UpdateRoleStateRequest_Data) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{7, 0}
}

func (x *UpdateRoleStateRequest_Data) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type HandleRoleMenuRequest_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuIds []uint64 `protobuf:"varint,10,rep,packed,name=menu_ids,json=menuIds,proto3" json:"menu_ids,omitempty"`
}

func (x *HandleRoleMenuRequest_Data) Reset() {
	*x = HandleRoleMenuRequest_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleRoleMenuRequest_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleRoleMenuRequest_Data) ProtoMessage() {}

func (x *HandleRoleMenuRequest_Data) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleRoleMenuRequest_Data.ProtoReflect.Descriptor instead.
func (*HandleRoleMenuRequest_Data) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{14, 0}
}

func (x *HandleRoleMenuRequest_Data) GetMenuIds() []uint64 {
	if x != nil {
		return x.MenuIds
	}
	return nil
}

type HandleRoleDataScopeRequest_DataScope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope             int32    `protobuf:"varint,1,opt,name=scope,proto3" json:"scope,omitempty"`
	DeptCheckStrictly *int32   `protobuf:"varint,2,opt,name=dept_check_strictly,json=deptCheckStrictly,proto3,oneof" json:"dept_check_strictly,omitempty"`
	DeptCustoms       []uint64 `protobuf:"varint,3,rep,packed,name=dept_customs,json=deptCustoms,proto3" json:"dept_customs,omitempty"`
}

func (x *HandleRoleDataScopeRequest_DataScope) Reset() {
	*x = HandleRoleDataScopeRequest_DataScope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_v1_role_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleRoleDataScopeRequest_DataScope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleRoleDataScopeRequest_DataScope) ProtoMessage() {}

func (x *HandleRoleDataScopeRequest_DataScope) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_role_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleRoleDataScopeRequest_DataScope.ProtoReflect.Descriptor instead.
func (*HandleRoleDataScopeRequest_DataScope) Descriptor() ([]byte, []int) {
	return file_admin_v1_role_proto_rawDescGZIP(), []int{20, 0}
}

func (x *HandleRoleDataScopeRequest_DataScope) GetScope() int32 {
	if x != nil {
		return x.Scope
	}
	return 0
}

func (x *HandleRoleDataScopeRequest_DataScope) GetDeptCheckStrictly() int32 {
	if x != nil && x.DeptCheckStrictly != nil {
		return *x.DeptCheckStrictly
	}
	return 0
}

func (x *HandleRoleDataScopeRequest_DataScope) GetDeptCustoms() []uint64 {
	if x != nil {
		return x.DeptCustoms
	}
	return nil
}

var File_admin_v1_role_proto protoreflect.FileDescriptor

var file_admin_v1_role_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x1a,
	0x24, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x70, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xfe, 0x04, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x0e, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x04, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x05, 0x52, 0x11, 0x6d, 0x65, 0x6e, 0x75, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x6c, 0x79, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x64, 0x65, 0x70, 0x74, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x6c, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x06, 0x52, 0x11, 0x64, 0x65, 0x70, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x53, 0x74, 0x72, 0x69, 0x63, 0x74, 0x6c, 0x79, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x07, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x73, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64,
	0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x6d,
	0x65, 0x6e, 0x75, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x6c, 0x79, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x6c, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73,
	0x22, 0x91, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x08, 0x6e, 0x6f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x6f, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x02, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x6f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x22, 0x4e, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0xb8, 0x04, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10,
	0x01, 0x18, 0x0a, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x09, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x32, 0x02, 0x28, 0x00, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x35, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01,
	0x18, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x48, 0x01, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x28, 0x00, 0x48, 0x02, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f,
	0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x13, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x48, 0x03, 0x52, 0x11, 0x6d,
	0x65, 0x6e, 0x75, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x72, 0x69, 0x63, 0x74, 0x6c, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x13, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x48, 0x04, 0x52, 0x11, 0x64, 0x65, 0x70,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x72, 0x69, 0x63, 0x74, 0x6c, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x29, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xe8, 0x07, 0x48, 0x05, 0x52,
	0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x08, 0x6d,
	0x65, 0x6e, 0x75, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x04, 0x42, 0x10, 0xfa,
	0x42, 0x0d, 0x92, 0x01, 0x0a, 0x08, 0x00, 0x18, 0x01, 0x22, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52,
	0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x73, 0x6f, 0x72, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x6c, 0x79, 0x42, 0x16, 0x0a, 0x14, 0x5f,
	0x64, 0x65, 0x70, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x6c, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x22,
	0x94, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x90, 0x05, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20,
	0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xab, 0x04, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x0a, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x28, 0x00, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0e, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x64, 0x48, 0x00, 0x52, 0x0d,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x48, 0x01, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x48,
	0x02, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x3c, 0x0a, 0x13, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x28, 0x00, 0x48, 0x03, 0x52, 0x11, 0x6d, 0x65, 0x6e, 0x75, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x53, 0x74, 0x72, 0x69, 0x63, 0x74, 0x6c, 0x79, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a,
	0x13, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x28, 0x00, 0x48, 0x04, 0x52, 0x11, 0x64, 0x65, 0x70, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x53, 0x74, 0x72, 0x69, 0x63, 0x74, 0x6c, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x28, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0xe8, 0x07, 0x48, 0x05, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x04, 0x42, 0x10, 0xfa, 0x42, 0x0d, 0x92, 0x01, 0x0a, 0x08,
	0x00, 0x18, 0x01, 0x22, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49,
	0x64, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x42, 0x16, 0x0a,
	0x14, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x6c, 0x79, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x6c, 0x79, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x93, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x25, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2c, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x12,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x2e, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x61, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x00, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x9f, 0x01, 0x0a, 0x15, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x32, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x33, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x08, 0x6d, 0x65,
	0x6e, 0x75, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x04, 0x42, 0x10, 0xfa, 0x42,
	0x0d, 0x92, 0x01, 0x0a, 0x08, 0x00, 0x18, 0x01, 0x22, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x07,
	0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x16, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x2e, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65,
	0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x61, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65,
	0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x70, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x32, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x13,
	0x64, 0x65, 0x70, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x11, 0x64, 0x65, 0x70,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x72, 0x69, 0x63, 0x74, 0x6c, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x73, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x6c, 0x79, 0x22, 0xb1, 0x02, 0x0a,
	0x1a, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x42, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f,
	0x70, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xb5, 0x01, 0x0a, 0x09, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x13, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x48, 0x00, 0x52, 0x11, 0x64,
	0x65, 0x70, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x72, 0x69, 0x63, 0x74, 0x6c, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x42, 0x10, 0xfa, 0x42, 0x0d, 0x92, 0x01,
	0x0a, 0x08, 0x00, 0x18, 0x01, 0x22, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x70,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x73, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x64, 0x65, 0x70,
	0x74, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x6c, 0x79,
	0x22, 0x9d, 0x01, 0x0a, 0x1b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x32, 0xb2, 0x09, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x54, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x5d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x3a, 0x01, 0x2a, 0x22, 0x09, 0x2f, 0x76, 0x31, 0x2f,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x18, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x65, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x16, 0x3a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7a, 0x0a, 0x0f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x14, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x5f, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x2a, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6b, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1d, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x65,
	0x6e, 0x75, 0x73, 0x12, 0x77, 0x0a, 0x0e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c,
	0x3a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x12, 0x6b, 0x0a, 0x0c,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x74, 0x12, 0x1d, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x44, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x44,
	0x65, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x2f, 0x64, 0x65, 0x70, 0x74, 0x73, 0x12, 0x7c, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x21, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x64, 0x61, 0x74,
	0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x8b, 0x01, 0x0a, 0x13, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12,
	0x24, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x21, 0x3a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x73, 0x42, 0xdc, 0x02, 0xba, 0x47, 0xf7, 0x01, 0x12, 0xf4, 0x01, 0x0a,
	0x11, 0x53, 0x63, 0x61, 0x66, 0x66, 0x6f, 0x6c, 0x64, 0x20, 0x52, 0x6f, 0x6c, 0x65, 0x20, 0x41,
	0x50, 0x49, 0x12, 0x28, 0xe5, 0x90, 0x8e, 0xe5, 0x8f, 0xb0, 0xe7, 0xae, 0xa1, 0xe7, 0x90, 0x86,
	0xe8, 0x84, 0x9a, 0xe6, 0x89, 0x8b, 0xe6, 0x9e, 0xb6, 0xe7, 0xb3, 0xbb, 0xe7, 0xbb, 0x9f, 0x2d,
	0xe8, 0xa7, 0x92, 0xe8, 0x89, 0xb2, 0xe6, 0x9c, 0x8d, 0xe5, 0x8a, 0xa1, 0x22, 0x50, 0x0a, 0x0c,
	0xe5, 0x9f, 0xba, 0xe7, 0xa1, 0x80, 0xe6, 0x9e, 0xb6, 0xe6, 0x9e, 0x84, 0x12, 0x2e, 0x68, 0x74,
	0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x65, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x1a, 0x10, 0x6e, 0x6f,
	0x6e, 0x65, 0x40, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2a, 0x5e,
	0x0a, 0x14, 0x42, 0x53, 0x44, 0x20, 0x33, 0x2d, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x20, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d,
	0x65, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x62, 0x6c, 0x6f, 0x62, 0x2f, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x2f, 0x4c, 0x49, 0x43, 0x45, 0x4e, 0x53, 0x45, 0x2e, 0x74, 0x78, 0x74, 0x32, 0x03,
	0x31, 0x2e, 0x30, 0x0a, 0x17, 0x64, 0x65, 0x76, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x36, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x65, 0x69, 0x64, 0x75, 0x6f, 0x6b,
	0x65, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x63, 0x61, 0x66, 0x66, 0x6f, 0x6c, 0x64, 0x2d, 0x73, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76,
	0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_v1_role_proto_rawDescOnce sync.Once
	file_admin_v1_role_proto_rawDescData = file_admin_v1_role_proto_rawDesc
)

func file_admin_v1_role_proto_rawDescGZIP() []byte {
	file_admin_v1_role_proto_rawDescOnce.Do(func() {
		file_admin_v1_role_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_v1_role_proto_rawDescData)
	})
	return file_admin_v1_role_proto_rawDescData
}

var file_admin_v1_role_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_admin_v1_role_proto_goTypes = []interface{}{
	(*Role)(nil),                                 // 0: admin.v1.Role
	(*ListRoleRequest)(nil),                      // 1: admin.v1.ListRoleRequest
	(*ListRoleResponse)(nil),                     // 2: admin.v1.ListRoleResponse
	(*CreateRoleRequest)(nil),                    // 3: admin.v1.CreateRoleRequest
	(*CreateRoleResponse)(nil),                   // 4: admin.v1.CreateRoleResponse
	(*UpdateRoleRequest)(nil),                    // 5: admin.v1.UpdateRoleRequest
	(*UpdateRoleResponse)(nil),                   // 6: admin.v1.UpdateRoleResponse
	(*UpdateRoleStateRequest)(nil),               // 7: admin.v1.UpdateRoleStateRequest
	(*UpdateRoleStateResponse)(nil),              // 8: admin.v1.UpdateRoleStateResponse
	(*GetRoleRequest)(nil),                       // 9: admin.v1.GetRoleRequest
	(*DeleteRoleRequest)(nil),                    // 10: admin.v1.DeleteRoleRequest
	(*DeleteRoleResponse)(nil),                   // 11: admin.v1.DeleteRoleResponse
	(*ListRoleMenuRequest)(nil),                  // 12: admin.v1.ListRoleMenuRequest
	(*ListRoleMenuResponse)(nil),                 // 13: admin.v1.ListRoleMenuResponse
	(*HandleRoleMenuRequest)(nil),                // 14: admin.v1.HandleRoleMenuRequest
	(*HandleRoleMenuResponse)(nil),               // 15: admin.v1.HandleRoleMenuResponse
	(*ListRoleDeptRequest)(nil),                  // 16: admin.v1.ListRoleDeptRequest
	(*ListRoleDeptResponse)(nil),                 // 17: admin.v1.ListRoleDeptResponse
	(*GetRoleDataScopeRequest)(nil),              // 18: admin.v1.GetRoleDataScopeRequest
	(*GetRoleDataScopeResponse)(nil),             // 19: admin.v1.GetRoleDataScopeResponse
	(*HandleRoleDataScopeRequest)(nil),           // 20: admin.v1.HandleRoleDataScopeRequest
	(*HandleRoleDataScopeResponse)(nil),          // 21: admin.v1.HandleRoleDataScopeResponse
	(*UpdateRoleRequest_Data)(nil),               // 22: admin.v1.UpdateRoleRequest.Data
	(*UpdateRoleStateRequest_Data)(nil),          // 23: admin.v1.UpdateRoleStateRequest.Data
	(*HandleRoleMenuRequest_Data)(nil),           // 24: admin.v1.HandleRoleMenuRequest.Data
	(*HandleRoleDataScopeRequest_DataScope)(nil), // 25: admin.v1.HandleRoleDataScopeRequest.DataScope
	(*timestamppb.Timestamp)(nil),                // 26: google.protobuf.Timestamp
	(*anypb.Any)(nil),                            // 27: google.protobuf.Any
	(*Menu)(nil),                                 // 28: admin.v1.Menu
	(*Dept)(nil),                                 // 29: admin.v1.Dept
}
var file_admin_v1_role_proto_depIdxs = []int32{
	26, // 0: admin.v1.Role.created_at:type_name -> google.protobuf.Timestamp
	26, // 1: admin.v1.Role.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: admin.v1.ListRoleResponse.items:type_name -> admin.v1.Role
	27, // 3: admin.v1.CreateRoleResponse.result:type_name -> google.protobuf.Any
	22, // 4: admin.v1.UpdateRoleRequest.data:type_name -> admin.v1.UpdateRoleRequest.Data
	27, // 5: admin.v1.UpdateRoleResponse.result:type_name -> google.protobuf.Any
	23, // 6: admin.v1.UpdateRoleStateRequest.data:type_name -> admin.v1.UpdateRoleStateRequest.Data
	27, // 7: admin.v1.UpdateRoleStateResponse.result:type_name -> google.protobuf.Any
	27, // 8: admin.v1.DeleteRoleResponse.result:type_name -> google.protobuf.Any
	28, // 9: admin.v1.ListRoleMenuResponse.items:type_name -> admin.v1.Menu
	24, // 10: admin.v1.HandleRoleMenuRequest.data:type_name -> admin.v1.HandleRoleMenuRequest.Data
	27, // 11: admin.v1.HandleRoleMenuResponse.result:type_name -> google.protobuf.Any
	29, // 12: admin.v1.ListRoleDeptResponse.items:type_name -> admin.v1.Dept
	25, // 13: admin.v1.HandleRoleDataScopeRequest.data:type_name -> admin.v1.HandleRoleDataScopeRequest.DataScope
	27, // 14: admin.v1.HandleRoleDataScopeResponse.result:type_name -> google.protobuf.Any
	1,  // 15: admin.v1.RoleService.ListRole:input_type -> admin.v1.ListRoleRequest
	3,  // 16: admin.v1.RoleService.CreateRole:input_type -> admin.v1.CreateRoleRequest
	9,  // 17: admin.v1.RoleService.GetRole:input_type -> admin.v1.GetRoleRequest
	5,  // 18: admin.v1.RoleService.UpdateRole:input_type -> admin.v1.UpdateRoleRequest
	7,  // 19: admin.v1.RoleService.UpdateRoleState:input_type -> admin.v1.UpdateRoleStateRequest
	10, // 20: admin.v1.RoleService.DeleteRole:input_type -> admin.v1.DeleteRoleRequest
	12, // 21: admin.v1.RoleService.ListRoleMenu:input_type -> admin.v1.ListRoleMenuRequest
	14, // 22: admin.v1.RoleService.HandleRoleMenu:input_type -> admin.v1.HandleRoleMenuRequest
	16, // 23: admin.v1.RoleService.ListRoleDept:input_type -> admin.v1.ListRoleDeptRequest
	18, // 24: admin.v1.RoleService.GetRoleDataScope:input_type -> admin.v1.GetRoleDataScopeRequest
	20, // 25: admin.v1.RoleService.HandleRoleDataScope:input_type -> admin.v1.HandleRoleDataScopeRequest
	2,  // 26: admin.v1.RoleService.ListRole:output_type -> admin.v1.ListRoleResponse
	4,  // 27: admin.v1.RoleService.CreateRole:output_type -> admin.v1.CreateRoleResponse
	0,  // 28: admin.v1.RoleService.GetRole:output_type -> admin.v1.Role
	6,  // 29: admin.v1.RoleService.UpdateRole:output_type -> admin.v1.UpdateRoleResponse
	8,  // 30: admin.v1.RoleService.UpdateRoleState:output_type -> admin.v1.UpdateRoleStateResponse
	11, // 31: admin.v1.RoleService.DeleteRole:output_type -> admin.v1.DeleteRoleResponse
	13, // 32: admin.v1.RoleService.ListRoleMenu:output_type -> admin.v1.ListRoleMenuResponse
	15, // 33: admin.v1.RoleService.HandleRoleMenu:output_type -> admin.v1.HandleRoleMenuResponse
	17, // 34: admin.v1.RoleService.ListRoleDept:output_type -> admin.v1.ListRoleDeptResponse
	19, // 35: admin.v1.RoleService.GetRoleDataScope:output_type -> admin.v1.GetRoleDataScopeResponse
	21, // 36: admin.v1.RoleService.HandleRoleDataScope:output_type -> admin.v1.HandleRoleDataScopeResponse
	26, // [26:37] is the sub-list for method output_type
	15, // [15:26] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_admin_v1_role_proto_init() }
func file_admin_v1_role_proto_init() {
	if File_admin_v1_role_proto != nil {
		return
	}
	file_admin_v1_menu_proto_init()
	file_admin_v1_dept_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_admin_v1_role_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoleMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoleMenuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleRoleMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleRoleMenuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoleDeptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoleDeptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleDataScopeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleDataScopeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleRoleDataScopeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleRoleDataScopeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleRequest_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleStateRequest_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleRoleMenuRequest_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_v1_role_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleRoleDataScopeRequest_DataScope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_admin_v1_role_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_admin_v1_role_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_admin_v1_role_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_admin_v1_role_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_admin_v1_role_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_admin_v1_role_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_admin_v1_role_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_admin_v1_role_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_admin_v1_role_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_admin_v1_role_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_admin_v1_role_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_admin_v1_role_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_admin_v1_role_proto_msgTypes[22].OneofWrappers = []interface{}{}
	file_admin_v1_role_proto_msgTypes[25].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_v1_role_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_v1_role_proto_goTypes,
		DependencyIndexes: file_admin_v1_role_proto_depIdxs,
		MessageInfos:      file_admin_v1_role_proto_msgTypes,
	}.Build()
	File_admin_v1_role_proto = out.File
	file_admin_v1_role_proto_rawDesc = nil
	file_admin_v1_role_proto_goTypes = nil
	file_admin_v1_role_proto_depIdxs = nil
}
